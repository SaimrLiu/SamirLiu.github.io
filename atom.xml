<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>隨勛所欲 - Google Analytics 網站分析</title>
  
  <subtitle>從未如此簡單有趣</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://samirliu127.github.io/"/>
  <updated>2020-06-16T09:47:02.072Z</updated>
  <id>https://samirliu127.github.io/</id>
  
  <author>
    <name>Samir Liu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ubuntu 18.04 安裝 Nvidia driver &amp; cuda 10.2 &amp; conda</title>
    <link href="https://samirliu127.github.io/posts/62551.html"/>
    <id>https://samirliu127.github.io/posts/62551.html</id>
    <published>2020-06-16T09:47:02.000Z</published>
    <updated>2020-06-16T09:47:02.072Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>雲服務：Google Cloud Platform<br>作業系統：ubuntu 18.04 LTS<br>顯示卡：TESLA T4</p></blockquote><hr><h2 id="1-安裝-GPU"><a href="#1-安裝-GPU" class="headerlink" title="1. 安裝 GPU"></a>1. 安裝 GPU</h2><p>以下皆在 root 下執行</p><pre class=" language-shell"><code class="language-shell">$ sudo su -</code></pre><pre class=" language-shell"><code class="language-shell">$ sudo apt-get update$ sudo apt-get install -y ubuntu-drivers-common$ ubuntu-drivers devices</code></pre><p>輸出看到可以安裝 440 的驅動版本</p><pre class=" language-shell"><code class="language-shell">== /sys/devices/pci0000:00/0000:00:04.0 ==modalias : pci:v000010DEd00001EB8sv000010DEsd000012A2bc03sc02i00vendor   : NVIDIA Corporationdriver   : nvidia-driver-435 - distro non-freedriver   : nvidia-driver-440 - distro non-free recommendeddriver   : xserver-xorg-video-nouveau - distro free builtin</code></pre><p>安裝驅動</p><pre class=" language-shell"><code class="language-shell">$ sudo ubuntu-drivers autoinstall</code></pre><hr><h2 id="2-安裝-cuda-10-2-amp-cuDNN"><a href="#2-安裝-cuda-10-2-amp-cuDNN" class="headerlink" title="2. 安裝 cuda 10.2 &amp; cuDNN"></a>2. 安裝 cuda 10.2 &amp; cuDNN</h2><h3 id="安裝-cuda-10-2-軟件包"><a href="#安裝-cuda-10-2-軟件包" class="headerlink" title="安裝 cuda 10.2 軟件包"></a>安裝 cuda 10.2 軟件包</h3><pre class=" language-shell"><code class="language-shell">$ cd /tmp$ wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-repo-ubuntu1804_10.2.89-1_amd64.deb$ sudo dpkg -i cuda-repo-ubuntu1804_10.2.89-1_amd64.deb$ sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub</code></pre><h3 id="安裝-cuDNN-v7-6-5-軟件包"><a href="#安裝-cuDNN-v7-6-5-軟件包" class="headerlink" title="安裝 cuDNN v7.6.5 軟件包"></a>安裝 cuDNN v7.6.5 軟件包</h3><p>cuDNN 軟件包到 <a href="https://developer.nvidia.com/cudnn" target="_blank" rel="noopener">這裡下載</a>，載 Runtime 與 Developer</p><ul><li>cuDNN Runtime Library for Ubuntu18.04 (Deb)</li><li>cuDNN Developer Library for Ubuntu18.04 (Deb)</li></ul><p><img src="/img/62551/001.png" alt=""></p><p>安裝軟件包</p><pre class=" language-shell"><code class="language-shell">$ sudo dpkg -i libcudnn7_7.6.5.32-1+cuda10.2_amd64.deb$ sudo dpkg -i libcudnn7-dev_7.6.5.32-1+cuda10.2_amd64.deb</code></pre><p>執行安裝後重開機</p><pre class=" language-shell"><code class="language-shell">$ sudo apt-get update$ sudo apt-get install --no-install-recommends \   cuda-10-2 \   libcudnn7=7.6.5.32-1+cuda10.2  \   libcudnn7-dev=7.6.5.32-1+cuda10.2$ sudo reboot</code></pre><p>重開機後測試</p><pre><code>$ nvidia-smi</code></pre><p><img src="/img/62551/002.png" alt=""></p><hr><h2 id="3-安裝-Miniconda"><a href="#3-安裝-Miniconda" class="headerlink" title="3. 安裝 Miniconda"></a>3. 安裝 Miniconda</h2><pre class=" language-shell"><code class="language-shell">$ cd /tmp && curl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh$ sudo bash Miniconda3-latest-Linux-x86_64.sh</code></pre><p>安裝位置 <code>/opt/miniconda3</code>，並將路徑新增至 <code>.bashrc</code></p><pre class=" language-shell"><code class="language-shell">export PATH="/opt/miniconda3/bin:$PATH"</code></pre><hr><h2 id="4-安裝-tensorflow"><a href="#4-安裝-tensorflow" class="headerlink" title="4. 安裝 tensorflow"></a>4. 安裝 tensorflow</h2><pre class=" language-shell"><code class="language-shell">pip install --upgrade --user pippip install tensorflow-gpupython -c 'import tensorflow as tf; tf.test.gpu_device_name()'</code></pre><p>輸出結果為<br><img src="/img/62551/003.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;雲服務：Google Cloud Platform&lt;br&gt;作業系統：ubuntu 18.04 LTS&lt;br&gt;顯示卡：TESLA T4&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;1-安裝-GPU&quot;&gt;&lt;a href=&quot;#1-安裝-G
      
    
    </summary>
    
      <category term="Python" scheme="https://samirliu127.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://samirliu127.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python getopt 命令列參數</title>
    <link href="https://samirliu127.github.io/posts/15191.html"/>
    <id>https://samirliu127.github.io/posts/15191.html</id>
    <published>2020-05-28T09:13:28.000Z</published>
    <updated>2020-05-28T09:15:28.642Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Python 提供 <code>getopt</code> 模組，提供幫助解析命令列的選項和參數。另外可以透過 <code>sys.argv</code> 取得命令列任何參數。</p></blockquote><hr><h2 id="函數"><a href="#函數" class="headerlink" title="函數"></a>函數</h2><h3 id="getopt"><a href="#getopt" class="headerlink" title="getopt"></a>getopt</h3><p>解析命令列</p><pre class=" language-python"><code class="language-python">getopt<span class="token punctuation">(</span>argv<span class="token punctuation">,</span> shortopts<span class="token punctuation">,</span> longopts<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><ul><li>argv：要解析的參數，通常是<code>sys.argv[1:]</code></li><li>shortopts：要識別的短格式<code>(-)</code>，其有要求參數後須加<code>:</code></li><li>longopts：可選，要識別的長格式<code>(--)</code>，有參數要求加<code>=</code></li></ul><h3 id="GetoptError"><a href="#GetoptError" class="headerlink" title="GetoptError"></a>GetoptError</h3><p>當再命令列發現未被辨識的選項，或需要被賦予參數得選項無參數時，將會發出異常。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">try</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">except</span> getopt<span class="token punctuation">.</span>GetoptError<span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre><hr><h2 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h2><h3 id="程式範例"><a href="#程式範例" class="headerlink" title="程式範例"></a>程式範例</h3><p><code>demo-getopt.py</code></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/python</span><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> getopt<span class="token keyword">def</span> <span class="token function">usage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token triple-quoted-string string">'''Usage:{sys.argv[0]} [-i name | --ifile=name][-o name | --ofile=name]    -h help    -i input file path    -o output file path    '''</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span>argv<span class="token punctuation">)</span><span class="token punctuation">:</span>    input_file <span class="token operator">=</span> <span class="token string">''</span>    output_file <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        opts<span class="token punctuation">,</span> args <span class="token operator">=</span> getopt<span class="token punctuation">.</span>getopt<span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'hi:o:'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"help"</span><span class="token punctuation">,</span> <span class="token string">"ifile="</span><span class="token punctuation">,</span> <span class="token string">"ofile="</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> getopt<span class="token punctuation">.</span>GetoptError<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">'{argv[0]} -i &lt;inputfile> -o &lt;outputfile>'</span><span class="token punctuation">)</span>        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> name<span class="token punctuation">,</span> value <span class="token keyword">in</span> opts<span class="token punctuation">:</span>        <span class="token keyword">if</span> name <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token string">'-h'</span><span class="token punctuation">,</span> <span class="token string">'--help'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            usage<span class="token punctuation">(</span><span class="token punctuation">)</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> name <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token string">'-i'</span><span class="token punctuation">,</span> <span class="token string">'--ifile'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            input_file <span class="token operator">=</span> value        <span class="token keyword">elif</span> name <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token string">'-o'</span><span class="token punctuation">,</span> <span class="token string">'--ofile'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            output_file <span class="token operator">=</span> value    <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">'&lt;&lt;&lt; Input file is {input_file} &lt;&lt;&lt;'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">'>>> Output file is {output_file} >>>'</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span></code></pre><h3 id="演示結果"><a href="#演示結果" class="headerlink" title="演示結果"></a>演示結果</h3><ol><li><pre class=" language-shell"><code class="language-shell">python demo-getopt.py -h# Usage:demo-getopt.py [-i name | --ifile=name][-o name | --ofile=name]#    -h help#    -i input file path#    -o output file path</code></pre></li><li><pre class=" language-shell"><code class="language-shell">python demo-getopt.py -i text.txt --ofile=data.csv# <<< Input file is text.txt <<<# >>> Output file is data.csv >>></code></pre></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Python 提供 &lt;code&gt;getopt&lt;/code&gt; 模組，提供幫助解析命令列的選項和參數。另外可以透過 &lt;code&gt;sys.argv&lt;/code&gt; 取得命令列任何參數。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;函數&quot;&gt;
      
    
    </summary>
    
      <category term="Python" scheme="https://samirliu127.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://samirliu127.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python 多執行緒 (multiprocessing)</title>
    <link href="https://samirliu127.github.io/posts/7928.html"/>
    <id>https://samirliu127.github.io/posts/7928.html</id>
    <published>2020-03-31T07:59:21.000Z</published>
    <updated>2020-03-31T08:02:38.470Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>multiprocessing 筆記</p></blockquote><h2 id="Process"><a href="#Process" class="headerlink" title="Process"></a>Process</h2><hr><h3 id="導入套件與進程-function"><a href="#導入套件與進程-function" class="headerlink" title="導入套件與進程 function"></a>導入套件與進程 function</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> time<span class="token keyword">import</span> multiprocessing <span class="token keyword">as</span> mp<span class="token keyword">def</span> <span class="token function">claw</span><span class="token punctuation">(</span>website<span class="token punctuation">)</span><span class="token punctuation">:</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>len<span class="token punctuation">(</span>website<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">'{website}: hello world'</span><span class="token punctuation">)</span></code></pre><h3 id="執行多進程"><a href="#執行多進程" class="headerlink" title="執行多進程"></a>執行多進程</h3><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 建立 Process</span><span class="token comment" spellcheck="true">## 當 args 的參數只要一個值時，需要加逗號，否則會報錯</span>work_1 <span class="token operator">=</span> mp<span class="token punctuation">.</span>Process<span class="token punctuation">(</span>target<span class="token operator">=</span>claw<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">'websiteAAAAAA'</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>work_2 <span class="token operator">=</span> mp<span class="token punctuation">.</span>Process<span class="token punctuation">(</span>target<span class="token operator">=</span>claw<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">'websiteB'</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 執行 Process</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Start Process'</span><span class="token punctuation">)</span>work_1<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>work_2<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 等待 Process 完成</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Wait...'</span><span class="token punctuation">)</span>work_1<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span>work_2<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Done!!!'</span><span class="token punctuation">)</span></code></pre><p>打印結果</p><pre class=" language-shell"><code class="language-shell">Start ProcessWait...websiteB[8]: hello worldwebsiteAAAAAA[13]: hello worldDone!!!</code></pre><h2 id="Pool-進程池"><a href="#Pool-進程池" class="headerlink" title="Pool 進程池"></a>Pool 進程池</h2><h3 id="導入套件與進程-function-1"><a href="#導入套件與進程-function-1" class="headerlink" title="導入套件與進程 function"></a>導入套件與進程 function</h3><p>使用多進程爬 Google 新聞前五則</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">import</span> multiprocessing <span class="token keyword">as</span> mp<span class="token keyword">def</span> <span class="token function">news_craw</span><span class="token punctuation">(</span>topic<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 取得該分類下前五則新聞標題與連結</span>    google_news <span class="token operator">=</span> <span class="token string">'https://news.google.com'</span>    url <span class="token operator">=</span> f<span class="token string">'{google_news}/topics/{topic}?hl=zh-TW&amp;gl=TW&amp;ceid=TW%3Azh-Hant'</span>    res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"html.parser"</span><span class="token punctuation">)</span>    news <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        news<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token string">'title'</span><span class="token punctuation">:</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'div.xrnccd h3'</span><span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>text<span class="token punctuation">,</span>            <span class="token string">'link'</span><span class="token punctuation">:</span> google_news <span class="token operator">+</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'div.xrnccd h3 a'</span><span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'href'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> news</code></pre><p>新聞主題</p><pre class=" language-python"><code class="language-python">google_news_topic <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'CAAqJQgKIh9DQkFTRVFvSUwyMHZNRFptTXpJU0JYcG9MVlJYS0FBUAE'</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">## 台灣</span>    <span class="token string">'CAAqKggKIiRDQkFTRlFvSUwyMHZNRGx1YlY4U0JYcG9MVlJYR2dKVVZ5Z0FQAQ'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">## 國際</span>    <span class="token string">'CAAqKggKIiRDQkFTRlFvSUwyMHZNRGx6TVdZU0JYcG9MVlJYR2dKVVZ5Z0FQAQ'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">## 商業</span>    <span class="token string">'CAAqKggKIiRDQkFTRlFvSUwyMHZNREpxYW5RU0JYcG9MVlJYR2dKVVZ5Z0FQAQ'</span>  <span class="token comment" spellcheck="true">## 娛樂</span><span class="token punctuation">]</span></code></pre><h3 id="執行多進程-1"><a href="#執行多進程-1" class="headerlink" title="執行多進程"></a>執行多進程</h3><h4 id="pool-map"><a href="#pool-map" class="headerlink" title="pool.map"></a>pool.map</h4><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># processes 預設使用電腦核心數</span><span class="token keyword">with</span> mp<span class="token punctuation">.</span>Pool<span class="token punctuation">(</span>processes<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">as</span> pool<span class="token punctuation">:</span>    res <span class="token operator">=</span> pool<span class="token punctuation">.</span>map<span class="token punctuation">(</span>news_craw<span class="token punctuation">,</span> google_news_topic<span class="token punctuation">)</span>new_list <span class="token operator">=</span> <span class="token punctuation">[</span>item <span class="token keyword">for</span> news <span class="token keyword">in</span> res <span class="token keyword">for</span> item <span class="token keyword">in</span> news<span class="token punctuation">]</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>new_list<span class="token punctuation">)</span>df</code></pre><h4 id="pool-apply-sync"><a href="#pool-apply-sync" class="headerlink" title="pool.apply_sync"></a>pool.apply_sync</h4><pre class=" language-python"><code class="language-python">pool <span class="token operator">=</span> mp<span class="token punctuation">.</span>Pool<span class="token punctuation">(</span>processes<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>multiple_res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> topic <span class="token keyword">in</span> google_news_topic<span class="token punctuation">:</span>    multiple_res<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pool<span class="token punctuation">.</span>apply_async<span class="token punctuation">(</span>news_craw<span class="token punctuation">,</span> <span class="token punctuation">(</span>topic<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>pool<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>pool<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 待程序完成</span><span class="token comment" spellcheck="true"># 使用 get 取得回傳值</span>new_list <span class="token operator">=</span> <span class="token punctuation">[</span>item <span class="token keyword">for</span> res <span class="token keyword">in</span> multiple_res <span class="token keyword">for</span> item <span class="token keyword">in</span> res<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>new_list<span class="token punctuation">)</span>df</code></pre><p>打印結果</p><blockquote><p><img src="/img/7928/001.png" alt=""></p></blockquote><p>在使用上兩者結果是一樣的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;multiprocessing 筆記&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Process&quot;&gt;&lt;a href=&quot;#Process&quot; class=&quot;headerlink&quot; title=&quot;Process&quot;&gt;&lt;/a&gt;Process&lt;/h2&gt;
      
    
    </summary>
    
      <category term="Python" scheme="https://samirliu127.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://samirliu127.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>community detection 社區發現 (Louvain)</title>
    <link href="https://samirliu127.github.io/posts/22257.html"/>
    <id>https://samirliu127.github.io/posts/22257.html</id>
    <published>2020-02-17T08:06:01.000Z</published>
    <updated>2020-02-17T08:06:01.291Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Louvain 算法是一種基於多層次優化 Modularity 的算法，具有快速、準確的優點，在效率和效果上都表現比較好，並且能夠發現層次性的社區結構，被認為是性能最好的社區發現算法之一。</p></blockquote><h2 id="Louvain-算法模型"><a href="#Louvain-算法模型" class="headerlink" title="Louvain 算法模型"></a>Louvain 算法模型</h2><p>大型網絡（如社交網路服務或移動電話網路）的典型規模現在以數百萬個節點為單位，並且這些規模要求使用新方法從其結構中檢索綜合信息。</p><p>一種有效的方法是將網路分解為子單元或社區，其中連接較為緊密的部分可以被看成一個社區，而在兩個社區間則相對連接較為稀疏。</p><blockquote><p><img src="/img/22257/001.png" alt=""><br>Modularity 的定義是衡量社區內的緊密程度，它的取值範圍是 [-0.5,1）。該算法來源於論文 《Fast unfolding of communities in large networks》。</p></blockquote><ul><li><code>Aij</code>：代表 i 和 j 之間的邊權重，當網路圖不帶權重時，所有邊權重可視為 1。</li><li><code>m</code>：所有邊的權重和(邊的數量)</li><li><code>ki</code>：所有與節點 i 相連的邊權重和，<code>kj</code>同理</li><li><code>Ci</code>：節點 i 的社區，<code>Cj</code>同理。<code>δ(Ci, Cj)</code> 表示若<code>Ci</code>與<code>Cj</code>為同一社區，則回傳 1，否則回傳 0</li></ul><blockquote><p><img src="/img/22257/002.png" alt=""><br>公式簡化後，可以簡單地理解為社區內部所有邊權重和減去與社區節點相連的邊權重和。</p></blockquote><ul><li><code>Σin</code>：表示社區內的邊權重和</li><li><code>Σtot</code>：表示與社區內的節點相連的所有的邊權重和</li></ul><h2 id="Louvain-算法過程"><a href="#Louvain-算法過程" class="headerlink" title="Louvain 算法過程"></a>Louvain 算法過程</h2><p><img src="/img/22257/000.png" alt=""></p><ol><li>針對每個節點與其鄰近節點做計算，衡量把該節點加入其鄰近節點的社區的 Modularity。選擇最大化 Modularity 值的節點，加入其所在的社區，直到不再發生變化。</li><li>將步驟 1 中形成的社區壓縮成一個點，分別計算這些點之間的邊與權重，以及社區內的所有點的邊與權重，用於下一輪的步驟 1 計算。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Louvain 算法是一種基於多層次優化 Modularity 的算法，具有快速、準確的優點，在效率和效果上都表現比較好，並且能夠發現層次性的社區結構，被認為是性能最好的社區發現算法之一。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Lou
      
    
    </summary>
    
      <category term="隨筆" scheme="https://samirliu127.github.io/categories/others/"/>
    
    
      <category term="機器學習" scheme="https://samirliu127.github.io/tags/%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92/"/>
    
  </entry>
  
  <entry>
    <title>Google Analytics 跨網域追蹤</title>
    <link href="https://samirliu127.github.io/posts/63657.html"/>
    <id>https://samirliu127.github.io/posts/63657.html</id>
    <published>2020-01-02T09:10:57.000Z</published>
    <updated>2020-01-02T09:11:03.536Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>當有多個網站想要使用同一個 Google Analytics 分析時，就需要設置跨網域追蹤(Cross Domain)，將跨兩個網域瀏覽的使用者指向為同一個使用者。以電商網站來說，從獨立製作的活動網頁導入到電商網站時，在未設置跨站，在資料上將會記錄成兩個使用者。</p></blockquote><h2 id="Client-ID-CID"><a href="#Client-ID-CID" class="headerlink" title="Client ID (CID)"></a>Client ID (CID)</h2><p>在實作跨網域追蹤之前須了解 Google Analytics 如何識別使用者，當使用者到達有安裝 Google Analytics 的網站時，會產生一組隨機且唯一的 Client ID(CID) 發送到瀏覽器的 Cookie 中，作為使用者的唯一識別 ID。</p><p>Google Analytics 同時也透過 CID 辨識新舊使用者，CID 預設存放於 Cookie 的 <code>_ga</code>，預設有效時間為兩年</p><p><img src="/img/63657/001.png" alt=""></p><h3 id="找到自己的-CID"><a href="#找到自己的-CID" class="headerlink" title="找到自己的 CID"></a>找到自己的 CID</h3><p>若站上只有一個 Google Analytics 可以使用：</p><pre class=" language-javascript"><code class="language-javascript">ga<span class="token punctuation">.</span><span class="token function">getAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'clientId'</span><span class="token punctuation">)</span></code></pre><p>若有多個 Google Analytics，將 <code>&lt;PROPERTY-ID&gt;</code> 取代為要找的資源 ID：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">try</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> trackers <span class="token operator">=</span> ga<span class="token punctuation">.</span><span class="token function">getAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> i<span class="token punctuation">,</span> len<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> trackers<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>trackers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'trackingId'</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"&lt;PROPERTY-ID>"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> trackers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'clientId'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token string">'false'</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="跨網域追蹤設置"><a href="#跨網域追蹤設置" class="headerlink" title="跨網域追蹤設置"></a>跨網域追蹤設置</h2><h3 id="Google-Tag-Manager"><a href="#Google-Tag-Manager" class="headerlink" title="Google Tag Manager"></a>Google Tag Manager</h3><ol><li>在變數 GAID 下增加 allowLinker 值為 true，啟用跨網站連結的參數解析。</li><li>在跨網域追蹤填上所需要跨站的網域，使用 <code>,</code> 分隔。<br><img src="/img/63657/002.png" alt=""></li></ol><h3 id="Google-Analytics"><a href="#Google-Analytics" class="headerlink" title="Google Analytics"></a>Google Analytics</h3><p>在 Google Analytics 設定下把相對應網域加進參照連結網址排除清單。<br><img src="/img/63657/003.png" alt=""></p><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><p>在設置完成之後，點擊連結會發現在網址之後多了一段 <code>_ga=xxxxxxx</code>，這就代表設置成功了，Google Analytics 將會提取網址上的 CID 並存入 Cookie，更詳細可以<a href="https://developers.google.com/analytics/devguides/collection/analyticsjs/linker" target="_blank" rel="noopener">參考</a>。</p><p>點擊 <a href="https://samir-blog.herokuapp.com/" target="_blank" rel="noopener">Demo Site</a> 可以看到設置結果。<br><img src="/img/63657/004.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;當有多個網站想要使用同一個 Google Analytics 分析時，就需要設置跨網域追蹤(Cross Domain)，將跨兩個網域瀏覽的使用者指向為同一個使用者。以電商網站來說，從獨立製作的活動網頁導入到電商網站時，在未設置跨站，在資料上將會記錄
      
    
    </summary>
    
      <category term="網站分析" scheme="https://samirliu127.github.io/categories/tracking/"/>
    
    
      <category term="Google Analytics" scheme="https://samirliu127.github.io/tags/Google-Analytics/"/>
    
  </entry>
  
  <entry>
    <title>Python：Google Analytics Reporting API 快速入門</title>
    <link href="https://samirliu127.github.io/posts/15747.html"/>
    <id>https://samirliu127.github.io/posts/15747.html</id>
    <published>2019-12-16T08:03:16.000Z</published>
    <updated>2020-02-17T07:22:07.203Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文教 Analytics Reporting API v4 的 Python 快速指南，使用服務帳戶(Service application)取得報表資料，大部分都是程式碼，說明較少。</p></blockquote><h2 id="啟用-GCP-服務"><a href="#啟用-GCP-服務" class="headerlink" title="啟用 GCP 服務"></a>啟用 GCP 服務</h2><hr><h3 id="1-啟用-API"><a href="#1-啟用-API" class="headerlink" title="1. 啟用 API"></a>1. 啟用 API</h3><p>在開始前要先啟用 <a href="https://console.developers.google.com/start/api?id=analyticsreporting.googleapis.com&credential=client_key" target="_blank" rel="noopener">Analytics Reporting API v4</a> 。<br><img src="/img/15747/000.png" alt=""></p><h3 id="2-建立服務帳戶"><a href="#2-建立服務帳戶" class="headerlink" title="2. 建立服務帳戶"></a>2. 建立服務帳戶</h3><p>在 GCP 的<code>API 和服務</code> &gt; <code>憑證</code> 建立服務帳戶金鑰，並選擇或新增服務帳戶，將產生的 json 金鑰存到本機。</p><h3 id="3-權限設置"><a href="#3-權限設置" class="headerlink" title="3. 權限設置"></a>3. 權限設置</h3><p>將此服務帳戶添加至 Google Analytics 報表中，檢視及分析權限即可，服務帳戶類似於以下的電子郵件地址：</p><blockquote><p><a href="mailto:quickstart@PROJECT-ID.iam.gserviceaccount.com" target="_blank" rel="noopener">quickstart@PROJECT-ID.iam.gserviceaccount.com</a></p></blockquote><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><h3 id="所需套件"><a href="#所需套件" class="headerlink" title="所需套件"></a>所需套件</h3><pre class=" language-txt"><code class="language-txt">google-oauth2-toolgoogle-api-python-client</code></pre><h3 id="取報表函數"><a href="#取報表函數" class="headerlink" title="取報表函數"></a>取報表函數</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> apiclient<span class="token punctuation">.</span>discovery <span class="token keyword">import</span> build<span class="token keyword">from</span> google<span class="token punctuation">.</span>oauth2<span class="token punctuation">.</span>service_account <span class="token keyword">import</span> CredentialsSCOPES <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://www.googleapis.com/auth/analytics.readonly'</span><span class="token punctuation">]</span>KEY_FILE_LOCATION <span class="token operator">=</span> <span class="token string">'&lt;JSON_FILE>'</span><span class="token keyword">def</span> <span class="token function">get_service</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    Build Analytics Reporting API V4 service object.    """</span>    credentials <span class="token operator">=</span> Credentials<span class="token punctuation">.</span>from_service_account_file<span class="token punctuation">(</span>        KEY_FILE_LOCATION<span class="token punctuation">,</span> scopes<span class="token operator">=</span>SCOPES    <span class="token punctuation">)</span>    service <span class="token operator">=</span> build<span class="token punctuation">(</span>serviceName<span class="token operator">=</span><span class="token string">'analyticsreporting'</span><span class="token punctuation">,</span> version<span class="token operator">=</span><span class="token string">'v4'</span><span class="token punctuation">,</span> credentials<span class="token operator">=</span>credentials<span class="token punctuation">)</span>    <span class="token keyword">return</span> service<span class="token keyword">def</span> <span class="token function">get_report</span><span class="token punctuation">(</span>    service<span class="token punctuation">,</span> view_id<span class="token punctuation">,</span>     start_date<span class="token operator">=</span><span class="token string">'7daysAgo'</span><span class="token punctuation">,</span> end_date<span class="token operator">=</span><span class="token string">'yesterday'</span><span class="token punctuation">,</span>     metrics<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dimensions<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> service<span class="token punctuation">.</span>reports<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>batchGet<span class="token punctuation">(</span>            body<span class="token operator">=</span><span class="token punctuation">{</span>                <span class="token string">'reportRequests'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>                    <span class="token string">'viewId'</span><span class="token punctuation">:</span> view_id<span class="token punctuation">,</span>                    <span class="token string">'dateRanges'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">'startDate'</span><span class="token punctuation">:</span> start_date<span class="token punctuation">,</span> <span class="token string">'endDate'</span><span class="token punctuation">:</span> end_date<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token string">'metrics'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">'expression'</span><span class="token punctuation">:</span> m<span class="token punctuation">}</span> <span class="token keyword">for</span> m <span class="token keyword">in</span> metrics<span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token string">'dimensions'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> d<span class="token punctuation">}</span> <span class="token keyword">for</span> d <span class="token keyword">in</span> dimensions<span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token punctuation">}</span><span class="token punctuation">]</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><pre class=" language-python"><code class="language-python">VIEW_ID <span class="token operator">=</span> <span class="token string">'&lt;VIEW_ID>'</span>metrics <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'ga:sessions'</span><span class="token punctuation">]</span>dimensions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'ga:source'</span><span class="token punctuation">,</span> <span class="token string">'ga:medium'</span><span class="token punctuation">]</span>start_date<span class="token punctuation">,</span> end_date <span class="token operator">=</span> <span class="token string">'7daysAgo'</span><span class="token punctuation">,</span> <span class="token string">'yesterday'</span>service <span class="token operator">=</span> get_service<span class="token punctuation">(</span><span class="token punctuation">)</span>response <span class="token operator">=</span> get_report<span class="token punctuation">(</span>                service<span class="token punctuation">,</span> VIEW_ID<span class="token punctuation">,</span>                start_date<span class="token punctuation">,</span> end_date<span class="token punctuation">,</span>                metrics<span class="token punctuation">,</span> dimensions                <span class="token punctuation">)</span></code></pre><h3 id="response-轉-DataFrame"><a href="#response-轉-DataFrame" class="headerlink" title="response 轉 DataFrame"></a>response 轉 DataFrame</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">res_to_df</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">:</span>    report <span class="token operator">=</span> res<span class="token punctuation">[</span><span class="token string">'reports'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    dimensions <span class="token operator">=</span> report<span class="token punctuation">[</span><span class="token string">'columnHeader'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'dimensions'</span><span class="token punctuation">]</span>    metrics <span class="token operator">=</span> <span class="token punctuation">[</span>m<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span> <span class="token keyword">for</span> m <span class="token keyword">in</span> report<span class="token punctuation">[</span><span class="token string">'columnHeader'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'metricHeader'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'metricHeaderEntries'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    headers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">*</span>dimensions<span class="token punctuation">,</span> <span class="token operator">*</span>metrics<span class="token punctuation">]</span>    data_rows <span class="token operator">=</span> report<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'rows'</span><span class="token punctuation">]</span>    data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> row <span class="token keyword">in</span> data_rows<span class="token punctuation">:</span>        data<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">*</span>row<span class="token punctuation">[</span><span class="token string">'dimensions'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">*</span>row<span class="token punctuation">[</span><span class="token string">'metrics'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'values'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>data<span class="token punctuation">,</span> columns<span class="token operator">=</span>headers<span class="token punctuation">)</span>df <span class="token operator">=</span> res_to_df<span class="token punctuation">(</span>response<span class="token punctuation">)</span></code></pre><h2 id="其他參考"><a href="#其他參考" class="headerlink" title="其他參考"></a>其他參考</h2><p><a href="https://ga-dev-tools.appspot.com/dimensions-metrics-explorer/" target="_blank" rel="noopener">Google Analytics 維度與指標組合參考</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文教 Analytics Reporting API v4 的 Python 快速指南，使用服務帳戶(Service application)取得報表資料，大部分都是程式碼，說明較少。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;啟用-G
      
    
    </summary>
    
      <category term="Python" scheme="https://samirliu127.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://samirliu127.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python 實現桑基圖(Sankey)</title>
    <link href="https://samirliu127.github.io/posts/29279.html"/>
    <id>https://samirliu127.github.io/posts/29279.html</id>
    <published>2019-12-10T08:59:47.000Z</published>
    <updated>2019-12-16T01:51:07.645Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>透過上次 <a href="../32264.html">RFM 用戶分析模型</a>將訪客分群，用 Python繪出桑基圖(Sankey)將用戶不同時間點分群的變化，用來觀察整體訪客經營是否符合預期中的變化。</p></blockquote><h2 id="桑基圖-Sankey-Diagram"><a href="#桑基圖-Sankey-Diagram" class="headerlink" title="桑基圖 (Sankey Diagram)"></a>桑基圖 (Sankey Diagram)</h2><hr><p>桑基圖是一種流程圖，其資訊包含著流量的大小、方向及變化狀況，套用在不同階段的客戶分群上，可以簡單看出訪客的變化狀況。<br><img src="/img/29279/001.png" alt=""></p><h2 id="客戶分群意義"><a href="#客戶分群意義" class="headerlink" title="客戶分群意義"></a>客戶分群意義</h2><hr><p>接續 <a href="../32264.html">RFM 用戶分析模型</a>的分組，避免維度太多只使用 Frequency 與 Monetary 分成 4 組。</p><table><thead><tr><th>Frequency 頻率</th><th>Monetary 金額</th><th>客戶分群</th></tr></thead><tbody><tr><td>高</td><td>高</td><td>Best Customers</td></tr><tr><td>高</td><td>低</td><td>Value Customers</td></tr><tr><td>低</td><td>高</td><td>Loyal Customers</td></tr><tr><td>低</td><td>低</td><td>Cheap Customers</td></tr></tbody></table><h2 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h2><hr><p>分群步驟參照前一篇 <a href="../32264.html">RFM 用戶分析模型</a>。</p><h3 id="資料準備"><a href="#資料準備" class="headerlink" title="資料準備"></a>資料準備</h3><p>Sankey 圖基本上由 source, target, value 組成，其資訊包含著流動方向與流量值。下圖為這次準備的數據集，其包含客戶每半年的分群與數量。</p><p><img src="/img/29279/002.png" alt=""></p><h3 id="繪圖"><a href="#繪圖" class="headerlink" title="繪圖"></a>繪圖</h3><h4 id="函數"><a href="#函數" class="headerlink" title="函數"></a>函數</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">gen_sankey</span><span class="token punctuation">(</span>df<span class="token punctuation">,</span> cat_cols<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> value_cols<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">'Sankey Diagram'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">""" 生成 Sankey fig 物件    :param df: 資料 DataFrame    :param cat_cols: 流程中的級別欄位名稱    :param value_cols: 每個流程的數量欄位名稱    :param title: Sankey 標題名稱    :return: dict() sankey data    """</span>    <span class="token comment" spellcheck="true"># 漸層色</span>    colorPalette <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'#3f51b1'</span><span class="token punctuation">,</span> <span class="token string">'#5a55ae'</span><span class="token punctuation">,</span> <span class="token string">'#7b5fac'</span><span class="token punctuation">,</span> <span class="token string">'#8f6aae'</span><span class="token punctuation">,</span> <span class="token string">'#a86aa4'</span><span class="token punctuation">,</span> <span class="token string">'#cc6b8e'</span><span class="token punctuation">,</span> <span class="token string">'#f18271'</span><span class="token punctuation">,</span> <span class="token string">'#f3a469'</span><span class="token punctuation">,</span> <span class="token string">'#f7c978'</span><span class="token punctuation">]</span>    labelList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    colorNumList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> catCol <span class="token keyword">in</span> cat_cols<span class="token punctuation">:</span>        labelListTemp <span class="token operator">=</span> list<span class="token punctuation">(</span>df<span class="token punctuation">[</span>catCol<span class="token punctuation">]</span><span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        colorNumList<span class="token punctuation">.</span>append<span class="token punctuation">(</span>len<span class="token punctuation">(</span>labelListTemp<span class="token punctuation">)</span><span class="token punctuation">)</span>        labelList<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>labelListTemp<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># labelList 去除重複</span>    labelList <span class="token operator">=</span> list<span class="token punctuation">(</span>dict<span class="token punctuation">.</span>fromkeys<span class="token punctuation">(</span>labelList<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 根據層級定義顏色</span>    colorList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> idx<span class="token punctuation">,</span> colorNum <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>colorNumList<span class="token punctuation">)</span><span class="token punctuation">:</span>        colorList <span class="token operator">=</span> colorList <span class="token operator">+</span> <span class="token punctuation">[</span>colorPalette<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">*</span>colorNum    <span class="token comment" spellcheck="true"># DataFrame 轉換成 source -> target</span>    sourceTargetDf <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'source'</span><span class="token punctuation">,</span> <span class="token string">'target'</span><span class="token punctuation">,</span> <span class="token string">'count'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>cat_cols<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        tempDf <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token punctuation">[</span>cat_cols<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> cat_cols<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> value_cols<span class="token punctuation">]</span><span class="token punctuation">]</span>        tempDf<span class="token punctuation">.</span>columns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'source'</span><span class="token punctuation">,</span> <span class="token string">'target'</span><span class="token punctuation">,</span> <span class="token string">'count'</span><span class="token punctuation">]</span>        sourceTargetDf <span class="token operator">=</span> pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>sourceTargetDf<span class="token punctuation">,</span> tempDf<span class="token punctuation">]</span><span class="token punctuation">)</span>        sourceTargetDf <span class="token operator">=</span> sourceTargetDf<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'source'</span><span class="token punctuation">,</span> <span class="token string">'target'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'count'</span><span class="token punctuation">:</span> <span class="token string">'sum'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 對 source-target 編譯成 index</span>    sourceTargetDf<span class="token punctuation">[</span><span class="token string">'sourceID'</span><span class="token punctuation">]</span> <span class="token operator">=</span> sourceTargetDf<span class="token punctuation">[</span><span class="token string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>apply<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> labelList<span class="token punctuation">.</span>index<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>    sourceTargetDf<span class="token punctuation">[</span><span class="token string">'targetID'</span><span class="token punctuation">]</span> <span class="token operator">=</span> sourceTargetDf<span class="token punctuation">[</span><span class="token string">'target'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>apply<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> labelList<span class="token punctuation">.</span>index<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 建立 Sankey 圖</span>    data <span class="token operator">=</span> dict<span class="token punctuation">(</span>        type<span class="token operator">=</span><span class="token string">'sankey'</span><span class="token punctuation">,</span>        node <span class="token operator">=</span> dict<span class="token punctuation">(</span>          pad <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">,</span>          thickness <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">,</span>          line <span class="token operator">=</span> dict<span class="token punctuation">(</span>            color <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">,</span>            width <span class="token operator">=</span> <span class="token number">0.5</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>          label <span class="token operator">=</span> labelList<span class="token punctuation">,</span>          color <span class="token operator">=</span> colorList        <span class="token punctuation">)</span><span class="token punctuation">,</span>        link <span class="token operator">=</span> dict<span class="token punctuation">(</span>          source <span class="token operator">=</span> sourceTargetDf<span class="token punctuation">[</span><span class="token string">'sourceID'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>          target <span class="token operator">=</span> sourceTargetDf<span class="token punctuation">[</span><span class="token string">'targetID'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>          value <span class="token operator">=</span> sourceTargetDf<span class="token punctuation">[</span><span class="token string">'count'</span><span class="token punctuation">]</span>        <span class="token punctuation">)</span>      <span class="token punctuation">)</span>    layout <span class="token operator">=</span>  dict<span class="token punctuation">(</span>        title <span class="token operator">=</span> title<span class="token punctuation">,</span>        font <span class="token operator">=</span> dict<span class="token punctuation">(</span>          size <span class="token operator">=</span> <span class="token number">10</span>        <span class="token punctuation">)</span>    <span class="token punctuation">)</span>    fig <span class="token operator">=</span> dict<span class="token punctuation">(</span>data<span class="token operator">=</span><span class="token punctuation">[</span>data<span class="token punctuation">]</span><span class="token punctuation">,</span> layout<span class="token operator">=</span>layout<span class="token punctuation">)</span>    <span class="token keyword">return</span> fig</code></pre><h4 id="函式使用"><a href="#函式使用" class="headerlink" title="函式使用"></a>函式使用</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> plotly<span class="token keyword">import</span> plotly<span class="token punctuation">.</span>graph_objects <span class="token keyword">as</span> gofig <span class="token operator">=</span> genSankey<span class="token punctuation">(</span>rfm_variety<span class="token punctuation">,</span> cat_cols<span class="token operator">=</span><span class="token punctuation">[</span>    <span class="token string">'level_201701'</span><span class="token punctuation">,</span> <span class="token string">'level_201706'</span><span class="token punctuation">,</span> <span class="token string">'level_201801'</span><span class="token punctuation">,</span>     <span class="token string">'level_201806'</span><span class="token punctuation">,</span> <span class="token string">'level_201901'</span><span class="token punctuation">,</span> <span class="token string">'level_201906'</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span> value_cols<span class="token operator">=</span><span class="token string">'count'</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">'訪客生命週期可視化'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># plotly.offline.plot(fig, validate=False) ## 生成 html</span>go<span class="token punctuation">.</span>Figure<span class="token punctuation">(</span>fig<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">## 繪圖</span></code></pre><p><img src="/img/29279/000.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;透過上次 &lt;a href=&quot;../32264.html&quot;&gt;RFM 用戶分析模型&lt;/a&gt;將訪客分群，用 Python繪出桑基圖(Sankey)將用戶不同時間點分群的變化，用來觀察整體訪客經營是否符合預期中的變化。&lt;/p&gt;
&lt;/blockquote&gt;

      
    
    </summary>
    
      <category term="Python" scheme="https://samirliu127.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://samirliu127.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>GTM 上設置 Google Analytics 電子商務</title>
    <link href="https://samirliu127.github.io/posts/24991.html"/>
    <id>https://samirliu127.github.io/posts/24991.html</id>
    <published>2019-12-06T04:03:08.000Z</published>
    <updated>2019-12-16T01:51:29.706Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>電子商務可以在網站上衡量訪客的交易資訊，其包含產品內容、產品數量、交易金額…等。加強型電子商務則為強調訪客的購物流程，包括產品的曝光、點擊、瀏覽、加入購物車…等。<br>大部分都推薦使用 dataLayer 取得交易資料，不過就需要動到網站請工程師修改。若只在 Google Tag Manager 上設置則使用自訂 JavaScript 將數據回傳給 Google Analytics，不過當網站有變動時就可能會抓錯欄位，這兩個方法各有優缺點。</p></blockquote><h2 id="Google-Analytics-電子商務參數"><a href="#Google-Analytics-電子商務參數" class="headerlink" title="Google Analytics 電子商務參數"></a>Google Analytics 電子商務參數</h2><hr><p>參考<a href="https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-ecommerce#product-data" target="_blank" rel="noopener">官方文件</a>列出幾個 Purchase 常用的參數。</p><h3 id="Action-Data"><a href="#Action-Data" class="headerlink" title="Action Data"></a>Action Data</h3><table><thead><tr><th>Key</th><th>Value Type</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td>id</td><td>text</td><td><strong>Yes*</strong></td><td>訂單編號，若互動為 purchase 則為必要參數</td></tr><tr><td>revenue</td><td>number</td><td>No</td><td>訂單總金額，此為包含運費、稅收…等金額</td></tr><tr><td>tax</td><td>number</td><td>No</td><td>訂單總稅額</td></tr><tr><td>shipping</td><td>number</td><td>No</td><td>訂單運費</td></tr><tr><td>coupon</td><td>text</td><td>No</td><td>訂單所使用的優惠券</td></tr></tbody></table><h3 id="Product-Data"><a href="#Product-Data" class="headerlink" title="Product Data"></a>Product Data</h3><table><thead><tr><th>Key</th><th>Value Type</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td>id</td><td>text</td><td><strong>Yes*</strong></td><td>產品不重複編號</td></tr><tr><td>name</td><td>text</td><td><strong>Yes*</strong></td><td>產品名稱</td></tr><tr><td>brand</td><td>text</td><td>No</td><td>產品品牌</td></tr><tr><td>category</td><td>text</td><td>No</td><td>產品類別</td></tr><tr><td>price</td><td>number</td><td>No</td><td>產品價格</td></tr><tr><td>quantity</td><td>integer</td><td>No</td><td>產品數量</td></tr></tbody></table><h2 id="使用-DataLayer-設置"><a href="#使用-DataLayer-設置" class="headerlink" title="使用 DataLayer 設置"></a>使用 DataLayer 設置</h2><hr><p>DataLayer(資料層)是一種 JavaScript 物件，需在網站原始碼中加入的資訊，可用來將網站資訊傳送到 Google Tag Manager，之後就可以容器中運用這項資訊。</p><h3 id="網站設置"><a href="#網站設置" class="headerlink" title="網站設置"></a>網站設置</h3><p>在購買完成頁設置如下</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>dataLayer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  <span class="token string">'ecommerce'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token string">'purchase'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token string">'actionField'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'T1235'</span><span class="token punctuation">,</span>        <span class="token string">'revenue'</span><span class="token punctuation">:</span> <span class="token number">7900</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token string">'products'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>        <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'產品名稱1'</span><span class="token punctuation">,</span>        <span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'E12945'</span><span class="token punctuation">,</span>        <span class="token string">'category'</span><span class="token punctuation">:</span> <span class="token string">'家電'</span><span class="token punctuation">,</span>        <span class="token string">'price'</span><span class="token punctuation">:</span> <span class="token number">5900</span><span class="token punctuation">,</span>        <span class="token string">'quantity'</span><span class="token punctuation">:</span> <span class="token number">1</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>        <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'產品名稱2'</span><span class="token punctuation">,</span>        <span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'C45093'</span><span class="token punctuation">,</span>        <span class="token string">'category'</span><span class="token punctuation">:</span> <span class="token string">'廚房用具'</span><span class="token punctuation">,</span>        <span class="token string">'price'</span><span class="token punctuation">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>        <span class="token string">'quantity'</span><span class="token punctuation">:</span> <span class="token number">2</span>      <span class="token punctuation">}</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="GTM-設置"><a href="#GTM-設置" class="headerlink" title="GTM 設置"></a>GTM 設置</h3><p>將 <a href="../30024.html#在-GTM-設置-GA">GAID 變數</a>啟用電子商務，勾選使用資料層。<br><img src="/img/24991/001.png" alt=""></p><h2 id="使用自訂-JavaScript"><a href="#使用自訂-JavaScript" class="headerlink" title="使用自訂 JavaScript"></a>使用自訂 JavaScript</h2><hr><p>使用自訂 JavaScript 將數據回傳給 Google Analytics，需要會一些爬蟲的技巧。</p><h3 id="建立使用者自定義變數"><a href="#建立使用者自定義變數" class="headerlink" title="建立使用者自定義變數"></a>建立使用者自定義變數</h3><p>建立自訂 JavaScript</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">var</span> ecommerceData <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'ecommerce'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token string">'purchase'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token string">'actionField'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>          <span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'T1235'</span><span class="token punctuation">,</span>          <span class="token string">'revenue'</span><span class="token punctuation">:</span> <span class="token number">7900</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token string">'products'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>          <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'產品名稱1'</span><span class="token punctuation">,</span>          <span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'E12945'</span><span class="token punctuation">,</span>          <span class="token string">'category'</span><span class="token punctuation">:</span> <span class="token string">'家電'</span><span class="token punctuation">,</span>          <span class="token string">'price'</span><span class="token punctuation">:</span> <span class="token number">5900</span><span class="token punctuation">,</span>          <span class="token string">'quantity'</span><span class="token punctuation">:</span> <span class="token number">1</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>          <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'產品名稱2'</span><span class="token punctuation">,</span>          <span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'C45093'</span><span class="token punctuation">,</span>          <span class="token string">'category'</span><span class="token punctuation">:</span> <span class="token string">'廚房用具'</span><span class="token punctuation">,</span>          <span class="token string">'price'</span><span class="token punctuation">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>          <span class="token string">'quantity'</span><span class="token punctuation">:</span> <span class="token number">2</span>        <span class="token punctuation">}</span><span class="token punctuation">]</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> ecommerceData<span class="token punctuation">}</span></code></pre><h3 id="新增-Google-Analytics-代碼"><a href="#新增-Google-Analytics-代碼" class="headerlink" title="新增 Google Analytics 代碼"></a>新增 Google Analytics 代碼</h3><ol><li>追蹤類型選用事件</li><li>非互動匹配選用是</li><li>啟用電子商務並讀取前面設置的自訂義 JavaScript</li><li>觸發條件使用 <code>Dom Ready</code>，並設定條件為購買頁面</li></ol><p><img src="/img/24991/002.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;電子商務可以在網站上衡量訪客的交易資訊，其包含產品內容、產品數量、交易金額…等。加強型電子商務則為強調訪客的購物流程，包括產品的曝光、點擊、瀏覽、加入購物車…等。&lt;br&gt;大部分都推薦使用 dataLayer 取得交易資料，不過就需要動到網站請工程師
      
    
    </summary>
    
      <category term="網站分析" scheme="https://samirliu127.github.io/categories/tracking/"/>
    
    
      <category term="Google Tag Manager" scheme="https://samirliu127.github.io/tags/Google-Tag-Manager/"/>
    
      <category term="Google Analytics" scheme="https://samirliu127.github.io/tags/Google-Analytics/"/>
    
  </entry>
  
  <entry>
    <title>Python 實現 RFM 用戶分析模型</title>
    <link href="https://samirliu127.github.io/posts/32264.html"/>
    <id>https://samirliu127.github.io/posts/32264.html</id>
    <published>2019-11-29T07:15:06.000Z</published>
    <updated>2019-12-16T01:51:46.863Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>RFM 是個簡易分析客戶價值的模型，在電商零售上常常使用。RFM 透過客戶<strong>近期的購買行為(Recency)</strong>、<strong>購買頻率(Frequency)</strong>、<strong>購買花費(Monetary)</strong> 三項指標評估客戶的價值狀況。</p></blockquote><h2 id="模型意義"><a href="#模型意義" class="headerlink" title="模型意義"></a>模型意義</h2><hr><ul><li>最近一次消費(Recency)：<br>上一次消費時間越近的顧客應該是比較好的顧客，對提供即時的商品或是服務也最有可能會有反應。</li><li>消費頻率(Frequency)：<br>也就是常客，也可以說是客戶對品牌的忠誠度，頻率高的優於頻率低的客戶。</li><li>消費金額(Monetary)：<br>客戶消費力，依循 <a href="https://zh.wikipedia.org/wiki/%E5%B8%95%E7%B4%AF%E6%89%98%E6%B3%95%E5%88%99" target="_blank" rel="noopener">Pareto’s Law (八二法則)</a>，80％的銷售額來自20％的客戶，高消費金額優於低消費金額。<br>長跪<h2 id="客戶分群意義"><a href="#客戶分群意義" class="headerlink" title="客戶分群意義"></a>客戶分群意義</h2></li></ul><table><thead><tr><th>Recency 消費時間</th><th>Frequency 頻率</th><th>Monetary 金額</th><th>客戶分群</th></tr></thead><tbody><tr><td>近</td><td>高</td><td>高</td><td>高價值，VIP 客戶</td></tr><tr><td>遠</td><td>高</td><td>高</td><td>高價值，流失客戶</td></tr><tr><td>近</td><td>低</td><td>高</td><td>高價值，新客戶</td></tr><tr><td>遠</td><td>低</td><td>高</td><td>高價值，淺在客戶</td></tr><tr><td>近</td><td>高</td><td>低</td><td>一般價值，VIP 客戶</td></tr><tr><td>遠</td><td>高</td><td>低</td><td>一般價值，流失客戶</td></tr><tr><td>近</td><td>低</td><td>低</td><td>一般價值，新客戶</td></tr><tr><td>遠</td><td>低</td><td>低</td><td>一般價值，淺在客戶</td></tr></tbody></table><p>以 R 與 F 分析圖劃分<br><img src="/img/32264/000.png" alt=""></p><h2 id="Python-程式碼"><a href="#Python-程式碼" class="headerlink" title="Python 程式碼"></a>Python 程式碼</h2><hr><p>使用 <a href="https://www.kaggle.com/carrie1/ecommerce-data" target="_blank" rel="noopener">kaggle</a> 的資料做練習</p><h3 id="Data-Prepare"><a href="#Data-Prepare" class="headerlink" title="Data Prepare"></a>Data Prepare</h3><p>資料清理，排除缺失值與負值，並計算出收益。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> seaborn <span class="token keyword">as</span> sns<span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime<span class="token comment" spellcheck="true"># Data Prepare</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'data.csv'</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">"ISO-8859-1"</span><span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">'InvoiceDate'</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'InvoiceDate'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 日期轉換</span>df_new <span class="token operator">=</span> df<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 排除缺失值</span>df_new <span class="token operator">=</span> df_new<span class="token punctuation">[</span>df_new<span class="token punctuation">.</span>Quantity <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># 排除負值</span>df_new <span class="token operator">=</span> df_new<span class="token punctuation">[</span>df_new<span class="token punctuation">.</span>UnitPrice <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># 排除負值</span>df<span class="token punctuation">[</span><span class="token string">'Revenue'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'Quantity'</span><span class="token punctuation">]</span> <span class="token operator">*</span> df<span class="token punctuation">[</span><span class="token string">'UnitPrice'</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># 收益計算</span>df<span class="token punctuation">[</span><span class="token string">'CustomerID'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'CustomerID'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">'int64'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># CustomerID 轉換</span></code></pre><p><img src="/img/32264/001.png" alt=""></p><h3 id="RFM-Table"><a href="#RFM-Table" class="headerlink" title="RFM Table"></a>RFM Table</h3><p>統計個人消費行為，得到至今最近一次消費的天數、消費次數、消費總金額</p><pre class=" language-python"><code class="language-python">NOW <span class="token operator">=</span> datetime<span class="token punctuation">(</span><span class="token number">2011</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 資料最後一天為 2011/12/09</span>rfm_df <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'CustomerID'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token string">'InvoiceDate'</span><span class="token punctuation">:</span> <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token punctuation">(</span>NOW <span class="token operator">-</span> x<span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>days<span class="token punctuation">,</span> <span class="token comment" spellcheck="true"># 近一次消費天</span>    <span class="token string">'InvoiceNo'</span><span class="token punctuation">:</span> <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">.</span>nunique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true"># 消費次數</span>    <span class="token string">'Revenue'</span><span class="token punctuation">:</span> <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">.</span>sum<span class="token punctuation">(</span><span class="token punctuation">)</span>                   <span class="token comment" spellcheck="true"># 消費金額</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>rfm_df<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>    columns<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'InvoiceDate'</span><span class="token punctuation">:</span> <span class="token string">'recency'</span><span class="token punctuation">,</span>              <span class="token string">'InvoiceNo'</span><span class="token punctuation">:</span> <span class="token string">'frequency'</span><span class="token punctuation">,</span>              <span class="token string">'Revenue'</span><span class="token punctuation">:</span> <span class="token string">'monetary'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 重新命名</span>rfm_df<span class="token punctuation">[</span><span class="token string">'user'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment" spellcheck="true"># 繪圖計數用</span></code></pre><p><img src="/img/32264/002.png" alt=""></p><h3 id="RFM-Model"><a href="#RFM-Model" class="headerlink" title="RFM Model"></a>RFM Model</h3><p>使用中位數(median)將數據分為兩級，也可以使用 33 與 66 分位(quantile)分三級</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 根據值將資料分級</span><span class="token comment" spellcheck="true"># col_val: 輸入值, level: 分級級距</span><span class="token keyword">def</span> <span class="token function">get_level</span><span class="token punctuation">(</span>col_val<span class="token punctuation">,</span> level<span class="token punctuation">:</span> list<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> idx<span class="token punctuation">,</span> val <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>reversed<span class="token punctuation">(</span>level<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> col_val <span class="token operator">>=</span> val<span class="token punctuation">:</span>            <span class="token keyword">return</span> f<span class="token string">'≥{int(val)}'</span><span class="token comment" spellcheck="true"># 分級</span>recency_level <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> rfm_df<span class="token punctuation">[</span><span class="token string">'recency'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>median<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>recency_label <span class="token operator">=</span> <span class="token punctuation">[</span>f<span class="token string">'≥{int(i)}'</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> recency_level<span class="token punctuation">]</span>rfm_df<span class="token punctuation">[</span><span class="token string">'recency_label'</span><span class="token punctuation">]</span> <span class="token operator">=</span> rfm_df<span class="token punctuation">[</span><span class="token string">'recency'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>apply<span class="token punctuation">(</span>    <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> get_level<span class="token punctuation">(</span>x<span class="token punctuation">,</span> recency_level<span class="token punctuation">)</span>    <span class="token punctuation">)</span>frequency_level <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> rfm_df<span class="token punctuation">[</span><span class="token string">'frequency'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>median<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>frequency_label <span class="token operator">=</span> <span class="token punctuation">[</span>f<span class="token string">'≥{int(i)}'</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> frequency_level<span class="token punctuation">]</span>rfm_df<span class="token punctuation">[</span><span class="token string">'frequency_label'</span><span class="token punctuation">]</span> <span class="token operator">=</span> rfm_df<span class="token punctuation">[</span><span class="token string">'frequency'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>apply<span class="token punctuation">(</span>    <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> get_level<span class="token punctuation">(</span>x<span class="token punctuation">,</span> frequency_level<span class="token punctuation">)</span>    <span class="token punctuation">)</span>monetary_level <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> rfm_df<span class="token punctuation">[</span><span class="token string">'monetary'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>median<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>monetary_label <span class="token operator">=</span> <span class="token punctuation">[</span>f<span class="token string">'≥{int(i)}'</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> monetary_level<span class="token punctuation">]</span>rfm_df<span class="token punctuation">[</span><span class="token string">'monetary_label'</span><span class="token punctuation">]</span> <span class="token operator">=</span> rfm_df<span class="token punctuation">[</span><span class="token string">'monetary'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>apply<span class="token punctuation">(</span>    <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> get_level<span class="token punctuation">(</span>x<span class="token punctuation">,</span> monetary_level<span class="token punctuation">)</span>    <span class="token punctuation">)</span></code></pre><p><img src="/img/32264/003.png" alt=""></p><h3 id="RFM-Draw"><a href="#RFM-Draw" class="headerlink" title="RFM Draw"></a>RFM Draw</h3><p>利用 seaborn 繪圖，分成四個區塊為各個客戶群，裡面兩條長條圖分別為高消費力與低消費力的人數</p><pre class=" language-python"><code class="language-python">g <span class="token operator">=</span> sns<span class="token punctuation">.</span>FacetGrid<span class="token punctuation">(</span>    rfm_df<span class="token punctuation">,</span> <span class="token comment" spellcheck="true"># 來源資料表</span>    col<span class="token operator">=</span><span class="token string">"recency_label"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true"># X資料來源欄位</span>    row<span class="token operator">=</span><span class="token string">"frequency_label"</span> <span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># Y資料來源欄位</span>    col_order<span class="token operator">=</span>recency_label<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># X資料順序</span>    row_order<span class="token operator">=</span>frequency_label<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true"># Y資料順序</span>    margin_titles<span class="token operator">=</span><span class="token boolean">True</span>  <span class="token comment" spellcheck="true"># 小圖啟用</span><span class="token punctuation">)</span>g <span class="token operator">=</span> g<span class="token punctuation">.</span>map_dataframe<span class="token punctuation">(</span>    sns<span class="token punctuation">.</span>barplot<span class="token punctuation">,</span> <span class="token comment" spellcheck="true"># 資料顯示的模式</span>    x<span class="token operator">=</span><span class="token string">'monetary_label'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true"># 小圖表X資料來源</span>    y<span class="token operator">=</span><span class="token string">'user'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true"># 小圖表Y資料來源，訪客計數</span>    order<span class="token operator">=</span>monetary_label<span class="token punctuation">,</span> <span class="token comment" spellcheck="true"># X資料順序</span>    estimator<span class="token operator">=</span>sum<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># Y計數加總</span>    palette <span class="token operator">=</span> sns<span class="token punctuation">.</span>color_palette<span class="token punctuation">(</span><span class="token string">"muted"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#畫布色調 </span><span class="token punctuation">)</span> g <span class="token operator">=</span> g<span class="token punctuation">.</span>set_axis_labels<span class="token punctuation">(</span><span class="token string">'Recency'</span><span class="token punctuation">,</span><span class="token string">'Frequency'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>add_legend<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="/img/32264/004.png" alt=""></p><h3 id="找出-VIP-客戶群"><a href="#找出-VIP-客戶群" class="headerlink" title="找出 VIP 客戶群"></a>找出 VIP 客戶群</h3><p>最後可以根據條件對不同客戶群分別做行銷</p><pre class=" language-python"><code class="language-python">vip <span class="token operator">=</span> rfm_df<span class="token punctuation">[</span>    <span class="token punctuation">(</span>rfm_df<span class="token punctuation">[</span><span class="token string">'frequency_label'</span><span class="token punctuation">]</span> <span class="token operator">==</span> frequency_label<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>    <span class="token punctuation">(</span>rfm_df<span class="token punctuation">[</span><span class="token string">'recency_label'</span><span class="token punctuation">]</span> <span class="token operator">==</span> recency_label<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>    <span class="token punctuation">(</span>rfm_df<span class="token punctuation">[</span><span class="token string">'monetary_label'</span><span class="token punctuation">]</span> <span class="token operator">==</span> monetary_label<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>vip<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span></code></pre><p><img src="/img/32264/005.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;RFM 是個簡易分析客戶價值的模型，在電商零售上常常使用。RFM 透過客戶&lt;strong&gt;近期的購買行為(Recency)&lt;/strong&gt;、&lt;strong&gt;購買頻率(Frequency)&lt;/strong&gt;、&lt;strong&gt;購買花費(Monetar
      
    
    </summary>
    
      <category term="Python" scheme="https://samirliu127.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://samirliu127.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Google Analytics 內容分組</title>
    <link href="https://samirliu127.github.io/posts/26559.html"/>
    <id>https://samirliu127.github.io/posts/26559.html</id>
    <published>2019-11-25T07:52:18.000Z</published>
    <updated>2019-12-16T01:52:21.228Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>介紹一個很少人使用的好功能，內容分組可以把頁面依照自己的方式分類，之後在資料有使用到網頁(pagePath)這個維度就非常有幫助。</p></blockquote><h2 id="內容分組"><a href="#內容分組" class="headerlink" title="內容分組"></a>內容分組</h2><hr><h3 id="設置"><a href="#設置" class="headerlink" title="設置"></a>設置</h3><h4 id="到-管理-gt-資料檢視-gt-內容分組-新增內容分類。"><a href="#到-管理-gt-資料檢視-gt-內容分組-新增內容分類。" class="headerlink" title="到 管理 &gt; 資料檢視 &gt; 內容分組 新增內容分類。"></a>到 <code>管理 &gt; 資料檢視 &gt; 內容分組</code> 新增內容分類。</h4><p><img src="https://i.imgur.com/VBjyFDq.png" alt=""></p><h4 id="內容分組有三種分類方式，分別是追蹤程式碼、使用者資訊擷取、使用者規則定義，這邊使用使用者規則定義做範例。"><a href="#內容分組有三種分類方式，分別是追蹤程式碼、使用者資訊擷取、使用者規則定義，這邊使用使用者規則定義做範例。" class="headerlink" title="內容分組有三種分類方式，分別是追蹤程式碼、使用者資訊擷取、使用者規則定義，這邊使用使用者規則定義做範例。"></a>內容分組有三種分類方式，分別是追蹤程式碼、使用者資訊擷取、使用者規則定義，這邊使用使用者規則定義做範例。</h4><p><img src="https://i.imgur.com/bmWt9N6.png" alt=""><br>以我的網站來定義幾個常用的<br>類別分類頁 =&gt; 網頁 開頭是 <code>/categories/</code><br>標籤分類頁 =&gt; 網頁 開頭是 <code>/tags/</code><br>文章分類頁 =&gt; 網頁 開頭是 <code>/posts/</code></p><h4 id="最後注意幾點"><a href="#最後注意幾點" class="headerlink" title="最後注意幾點"></a>最後注意幾點</h4><ol><li>內容分組為設置完當下才會生效，並不會套用到過去資料。</li><li>分類順序要注意，一個頁面只會優先分到第一個媒合的內容分頁。<br><img src="https://i.imgur.com/CP4EVlb.png" alt=""></li><li>未被媒合的頁面會分類至<code>(not set)</code></li><li>內容分組為資料檢視層，不同資料檢視需另外設置。</li></ol><h2 id="分類應用"><a href="#分類應用" class="headerlink" title="分類應用"></a>分類應用</h2><hr><p>之後大部分有使用到網頁的維度皆可切換成內容分組，方便資料分析。<br><img src="https://i.imgur.com/Faz1Nla.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;介紹一個很少人使用的好功能，內容分組可以把頁面依照自己的方式分類，之後在資料有使用到網頁(pagePath)這個維度就非常有幫助。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;內容分組&quot;&gt;&lt;a href=&quot;#內容分組&quot; class=&quot;hea
      
    
    </summary>
    
      <category term="網站分析" scheme="https://samirliu127.github.io/categories/tracking/"/>
    
    
      <category term="Google Analytics" scheme="https://samirliu127.github.io/tags/Google-Analytics/"/>
    
  </entry>
  
  <entry>
    <title>將 Google Analytics 數據同步到 Google Sheet</title>
    <link href="https://samirliu127.github.io/posts/51238.html"/>
    <id>https://samirliu127.github.io/posts/51238.html</id>
    <published>2019-11-22T09:15:01.000Z</published>
    <updated>2019-11-22T09:15:01.848Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Google 試算表(Sheet) 有個好用的小工具，可以設定排程取得 Google Analytics 的數據，對習慣使用試算表的人是一大福音。</p></blockquote><h2 id="步驟"><a href="#步驟" class="headerlink" title="步驟"></a>步驟</h2><h3 id="安裝："><a href="#安裝：" class="headerlink" title="安裝："></a>安裝：</h3><ol><li>建立 Google Sheet。</li><li>安裝外掛工具，從<code>外掛程式 &gt; 取得外掛程式</code>可以找到 Google Analytics 的外掛工具。<br><img src="https://i.imgur.com/Zni371G.png" alt=""><br><img src="https://i.imgur.com/QlMQjiD.png" alt=""></li></ol><h3 id="建立報表："><a href="#建立報表：" class="headerlink" title="建立報表："></a>建立報表：</h3><ol><li>授權安裝後，點選<code>Create new report</code>。<br><img src="https://i.imgur.com/eR6sZO4.png" alt=""></li><li>根據需求選擇 Google Analytics、維度(Dimension)、指標(Metrics)後建立報表，維度跟指標的文件可以<a href="https://ga-dev-tools.appspot.com/dimensions-metrics-explorer/" target="_blank" rel="noopener">參考這邊</a>。<br><img src="https://i.imgur.com/v47c9cR.png" alt=""></li><li>會產生一個試算表 <code>Report Configuration</code>，是取得數據相關的任務設定。</li></ol><h3 id="執行與排程"><a href="#執行與排程" class="headerlink" title="執行與排程"></a>執行與排程</h3><ol><li>在選單可以選擇立即執行與設定排程。<br><img src="https://i.imgur.com/UbObaEX.png" alt=""></li><li>排成設定為自動跑報表的時間間隔。<br><img src="https://i.imgur.com/Ie2vaWE.png" alt=""></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Google 試算表(Sheet) 有個好用的小工具，可以設定排程取得 Google Analytics 的數據，對習慣使用試算表的人是一大福音。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;步驟&quot;&gt;&lt;a href=&quot;#步驟&quot; class=
      
    
    </summary>
    
      <category term="網站分析" scheme="https://samirliu127.github.io/categories/tracking/"/>
    
    
      <category term="Google Analytics" scheme="https://samirliu127.github.io/tags/Google-Analytics/"/>
    
      <category term="Google Sheet" scheme="https://samirliu127.github.io/tags/Google-Sheet/"/>
    
  </entry>
  
  <entry>
    <title>Facebook Pixel 代碼部署</title>
    <link href="https://samirliu127.github.io/posts/16262.html"/>
    <id>https://samirliu127.github.io/posts/16262.html</id>
    <published>2019-11-20T07:52:47.000Z</published>
    <updated>2019-11-27T00:56:21.300Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Facebook Pixel？臉書像素？是 Facebook 的網頁追蹤代碼，用於追蹤與衡量網站的訪客，可以針對指定受眾做在行銷或是建立相似受眾找到更多的淺在客戶群，所以在 Facebook 上投放廣告之前埋設追蹤碼是必要的。不過 Facebook 在 Google Tag Manager 沒有預設模組，所以需要用自訂 HTML 設置，不過有一些地方需要注意，確保資訊有正確的送出，若有其他問題歡迎留言提問。</p></blockquote><h2 id="Facebook-Pixel"><a href="#Facebook-Pixel" class="headerlink" title="Facebook Pixel"></a>Facebook Pixel</h2><hr><h3 id="全頁追蹤-All-Pages"><a href="#全頁追蹤-All-Pages" class="headerlink" title="全頁追蹤 All Pages"></a>全頁追蹤 All Pages</h3><h4 id="PageView"><a href="#PageView" class="headerlink" title="PageView"></a>PageView</h4><p>這是預設的像素跟踪頁面訪問，在訪客登陸您的網站頁面時觸發，Facebook 後臺產生時會同時存在。</p><h5 id="設置："><a href="#設置：" class="headerlink" title="設置："></a>設置：</h5><ol><li>選用自訂 HTML 直接將程式碼貼上。</li><li>代碼觸發選項選用<strong>每個網頁一次</strong>，避免同一頁面觸發多次。</li><li>觸發條件選擇 All Pages。</li></ol><p><img src="https://i.imgur.com/2tzqOos.png" alt=""></p><h3 id="事件-Event"><a href="#事件-Event" class="headerlink" title="事件 Event"></a>事件 Event</h3><p><a href="https://developers.facebook.com/docs/facebook-pixel/reference" target="_blank" rel="noopener">官方</a>定義一些標準事件，這邊使用<code>ViewContent</code>與<code>Contact</code>做說明，兩者差異前者為到達頁面時觸發，後者為點擊觸發，在設置上稍有些不同，目的是確保訊息有正確的送出。</p><blockquote><p>Facebook 事件都建議使用 <a href="https://developers.facebook.com/docs/facebook-pixel/advanced/#tracking-events-for-individual-pixels" target="_blank" rel="noopener">trackSingle</a>，避免影響其他的 pixel 事件收集，導致後臺計算成效時有落差。<br>如：<code>fbq(&#39;trackSingle&#39;, &#39;&lt;Pixel Id&gt;&#39;, &#39;&lt;Event&gt;&#39;);</code> </p></blockquote><h4 id="到達指定頁面"><a href="#到達指定頁面" class="headerlink" title="到達指定頁面"></a>到達指定頁面</h4><h5 id="ViewContent"><a href="#ViewContent" class="headerlink" title="ViewContent"></a>ViewContent</h5><p>為到達指定頁面時觸發，需要注意的是要在 <a href="#PageView">PageView</a> 完成後才能執行，同類型的有 <code>InitiateCheckout</code>、<code>Purchase</code>。</p><h5 id="設置：-1"><a href="#設置：-1" class="headerlink" title="設置："></a>設置：</h5><ol><li>選用自訂 HTML 將事件代碼貼上。</li><li>代碼觸發順序勾選啟用前先啟用 <a href="#PageView">PageView</a> 代碼，這會確保代碼的執行順序。</li><li>觸發條件選擇 <a href="../posts/30024.html#觸發條件-Trigger">Dom Ready</a>，加上指定頁面條件，再次確保代碼執行順序。</li></ol><p><img src="https://i.imgur.com/NS5vCTb.png" alt=""></p><h4 id="指定元素點擊"><a href="#指定元素點擊" class="headerlink" title="指定元素點擊"></a>指定元素點擊</h4><h5 id="Contact"><a href="#Contact" class="headerlink" title="Contact"></a>Contact</h5><p>為點擊指定元素時觸發，通常發生時已經完成了 PageView 的事件，同類型常見的如：<code>AddToCart</code>、<code>AddToWishlist</code>、<code>Search</code>…等。</p><h5 id="設置：-2"><a href="#設置：-2" class="headerlink" title="設置："></a>設置：</h5><ol><li>選用自訂 HTML 將事件代碼貼上。</li><li>觸發條件選擇點擊，加上指定元素條件。</li></ol><p><img src="https://i.imgur.com/3mqLqcV.png" alt=""></p><h2 id="檢查小工具"><a href="#檢查小工具" class="headerlink" title="檢查小工具"></a>檢查小工具</h2><hr><p><a href="https://chrome.google.com/webstore/detail/facebook-pixel-helper/fdgfkebogiimcoedlicjlajpkdmockpc" target="_blank" rel="noopener">Facebook Pixel Helper</a><br><img src="https://i.imgur.com/mSSqp6n.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Facebook Pixel？臉書像素？是 Facebook 的網頁追蹤代碼，用於追蹤與衡量網站的訪客，可以針對指定受眾做在行銷或是建立相似受眾找到更多的淺在客戶群，所以在 Facebook 上投放廣告之前埋設追蹤碼是必要的。不過 Facebook
      
    
    </summary>
    
      <category term="網站分析" scheme="https://samirliu127.github.io/categories/tracking/"/>
    
    
      <category term="Google Tag Manager" scheme="https://samirliu127.github.io/tags/Google-Tag-Manager/"/>
    
      <category term="Facebook" scheme="https://samirliu127.github.io/tags/Facebook/"/>
    
  </entry>
  
  <entry>
    <title>Google Analytics 事件</title>
    <link href="https://samirliu127.github.io/posts/25832.html"/>
    <id>https://samirliu127.github.io/posts/25832.html</id>
    <published>2019-11-19T09:13:01.000Z</published>
    <updated>2019-11-22T08:13:04.692Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>之前的文章 <a href="../posts/30024.html">Google Tag Manager 入門</a>有提到如何用 GTM 設置全頁追蹤 GA。這次介紹另一個重要的功能<strong>事件</strong>，了解事件才算是脫離 GA 新手村。</p></blockquote><h2 id="Google-Analytics-事件"><a href="#Google-Analytics-事件" class="headerlink" title="Google Analytics 事件"></a>Google Analytics 事件</h2><hr><p>事件在網頁分析上是個重要的功能，需要在網站安裝自訂義的程式碼，才會搜集事件的資料，從此觀察訪客與網站的互動行為。</p><h3 id="事件的紀錄資料"><a href="#事件的紀錄資料" class="headerlink" title="事件的紀錄資料"></a>事件的紀錄資料</h3><p>所填入的值只要是自己有辦法辨識即可，這邊分享我習慣的設置想法。</p><ol><li>事件類別 (Category)<br>訪客預期得到動作，如：Search, AddToCart, Contact。</li><li>事件動作 (Action)<br>觸發事件的動作，如：Click, Scroll the page。</li><li>事件標籤 (Label)<br>敘述文字，連結、簡短的說明，依情況設置。</li><li>事件價值 (Value)<br>定義訪客互動的成效數值，依情況設置。</li></ol><h2 id="在-GTM-設置-GA-事件"><a href="#在-GTM-設置-GA-事件" class="headerlink" title="在 GTM 設置 GA 事件"></a>在 GTM 設置 GA 事件</h2><p>目標是追蹤首頁 <code>Social</code> 的四個按鈕的點擊次數。<br><img src="https://i.imgur.com/7539n4Z.png" alt=""></p><h3 id="設置"><a href="#設置" class="headerlink" title="設置"></a>設置</h3><h4 id="變數"><a href="#變數" class="headerlink" title="變數"></a>變數</h4><p>啟用內建變數<code>Click Element</code></p><h4 id="觸發條件"><a href="#觸發條件" class="headerlink" title="觸發條件"></a>觸發條件</h4><p><img src="https://i.imgur.com/pACxsHu.png" alt=""></p><h4 id="代碼"><a href="#代碼" class="headerlink" title="代碼"></a>代碼</h4><p><img src="https://i.imgur.com/GR9cTBZ.png" alt=""></p><blockquote><p>如果需要個別追點擊次數，可以分開設置觸發條件與代碼。</p></blockquote><h3 id="檢查-Debug"><a href="#檢查-Debug" class="headerlink" title="檢查(Debug)"></a>檢查(Debug)</h3><p>在發佈之前使用<a href="../posts/13266.html#Debug">預覽</a>檢查。<br><img src="https://i.imgur.com/axp3yzA.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;之前的文章 &lt;a href=&quot;../posts/30024.html&quot;&gt;Google Tag Manager 入門&lt;/a&gt;有提到如何用 GTM 設置全頁追蹤 GA。這次介紹另一個重要的功能&lt;strong&gt;事件&lt;/strong&gt;，了解事件才算是脫離 
      
    
    </summary>
    
      <category term="網站分析" scheme="https://samirliu127.github.io/categories/tracking/"/>
    
    
      <category term="Google Tag Manager" scheme="https://samirliu127.github.io/tags/Google-Tag-Manager/"/>
    
      <category term="Google Analytics" scheme="https://samirliu127.github.io/tags/Google-Analytics/"/>
    
  </entry>
  
  <entry>
    <title>Google Analytics 基本參數設置</title>
    <link href="https://samirliu127.github.io/posts/14176.html"/>
    <id>https://samirliu127.github.io/posts/14176.html</id>
    <published>2019-11-18T07:45:44.000Z</published>
    <updated>2019-11-27T00:56:21.301Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>這篇整理常用 Google Analytics 常用設置的說明，可能使用的情境：管理訪客 Coockie、動態網頁追蹤、跨站追蹤、跨裝置追蹤，在默認的環境下這些功能是沒有的，所以需要做一些個人化的設定。</p></blockquote><h2 id="Google-Analytics-參數"><a href="#Google-Analytics-參數" class="headerlink" title="Google Analytics 參數"></a>Google Analytics 參數</h2><hr><p><a href="https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference" target="_blank" rel="noopener">官方文件</a></p><h6 id="clientId-text-："><a href="#clientId-text-：" class="headerlink" title="clientId(text)："></a><strong>clientId</strong>(text)：</h6><p>訪客匿名識別 id，即為 Google Analytics 的第一方 Cookie <code>_ga</code>，可以在使用者多層檢視找到，預設為兩組數字組成，如 <code>717269320.1574042822</code>，分別為隨機數字與進站時間作為訪客的唯一識別。</p><h6 id="cookieName-text-："><a href="#cookieName-text-：" class="headerlink" title="cookieName(text)："></a><strong>cookieName</strong>(text)：</h6><p>用於儲存第一方 cookie 的名稱，預設為<code>_ga</code>。</p><h6 id="sampleRate-number-："><a href="#sampleRate-number-：" class="headerlink" title="sampleRate(number)："></a><strong>sampleRate</strong>(number)：</h6><p>指定網站追蹤的用戶百分比。預設值為100。大流量網站可以降低讓 Google Analytics 保持在資料處理限制之內。</p><h6 id="siteSpeedSampleRate-number-："><a href="#siteSpeedSampleRate-number-：" class="headerlink" title="siteSpeedSampleRate(number)："></a><strong>siteSpeedSampleRate</strong>(number)：</h6><p>指定網站數據計算的抽樣比例，預設值為10。</p><h6 id="allowLinker-boolean-："><a href="#allowLinker-boolean-：" class="headerlink" title="allowLinker(boolean)："></a><strong>allowLinker</strong>(boolean)：</h6><p>預設為<code>false</code>，當需要跨站追蹤須設置為<code>true</code>。</p><h6 id="userId-text-："><a href="#userId-text-：" class="headerlink" title="userId(text)："></a><strong>userId</strong>(text)：</h6><p>訪客跨站、跨裝置的唯一識別 id，不能是能識別個人身份的資料(姓名、身分證字號、電子郵件地址等)，違反帳戶可能會被終止。</p><h6 id="page-text-："><a href="#page-text-：" class="headerlink" title="page(text)："></a><strong>page</strong>(text)：</h6><p>頁面路徑，應該以<code>/</code>開頭，於動態網頁時須設置。</p><h6 id="title-text-："><a href="#title-text-：" class="headerlink" title="title(text)："></a><strong>title</strong>(text)：</h6><p>頁面標題，於動態網頁時須設置。</p><h2 id="Google-Tag-Manager-設置參數"><a href="#Google-Tag-Manager-設置參數" class="headerlink" title="Google Tag Manager 設置參數"></a>Google Tag Manager 設置參數</h2><hr><p>在 Google Tag Manager 上設置非常簡單，只需要在 Google Analytics 的模組上新增所需要的欄位名稱與值就完成了。<br><img src="https://i.imgur.com/wMFdcAC.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;這篇整理常用 Google Analytics 常用設置的說明，可能使用的情境：管理訪客 Coockie、動態網頁追蹤、跨站追蹤、跨裝置追蹤，在默認的環境下這些功能是沒有的，所以需要做一些個人化的設定。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 
      
    
    </summary>
    
      <category term="網站分析" scheme="https://samirliu127.github.io/categories/tracking/"/>
    
    
      <category term="Google Tag Manager" scheme="https://samirliu127.github.io/tags/Google-Tag-Manager/"/>
    
      <category term="Google Analytics" scheme="https://samirliu127.github.io/tags/Google-Analytics/"/>
    
  </entry>
  
  <entry>
    <title>頁面捲動深度追蹤</title>
    <link href="https://samirliu127.github.io/posts/13266.html"/>
    <id>https://samirliu127.github.io/posts/13266.html</id>
    <published>2019-11-16T05:05:33.000Z</published>
    <updated>2019-11-27T00:56:21.304Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本站屬於技術分享的文章，最好的互動就是<strong>閱讀文章的深度</strong>，透過 GTM 可以簡單的設置當捲動深度達到目標百分比時當作是轉換。本篇可以拆分成三個部分：GTM 事件設定、GTM Debug、GA 目標設定。</p></blockquote><h2 id="Google-Tag-Manager-設置事件"><a href="#Google-Tag-Manager-設置事件" class="headerlink" title="Google Tag Manager 設置事件"></a>Google Tag Manager 設置事件</h2><hr><h3 id="Variable"><a href="#Variable" class="headerlink" title="Variable"></a>Variable</h3><p>啟用內建變數<code>Scroll Depth Threshold</code>，拿來當作事件價值使用。<br><img src="https://i.imgur.com/tHtwVnr.png" alt=""></p><h3 id="Trigger"><a href="#Trigger" class="headerlink" title="Trigger"></a>Trigger</h3><p>新增捲動深度的觸發條件，勾選捲動深度後分別設置 40 與 85 百分比，出發條件鎖定在文章頁面，開頭為 <code>/posts/</code>。<br><img src="https://i.imgur.com/OQt44S5.png" alt=""></p><p><img src="https://i.imgur.com/SZnI2t2.png" alt=""></p><h3 id="Tag"><a href="#Tag" class="headerlink" title="Tag"></a>Tag</h3><ol><li>新增通用 Analytics (分析)。</li><li>追蹤類型改成 <code>事件</code>。</li><li>填上自訂義的類別、動作或標籤，標籤與值帶上預設變數<code>Scroll Depth Threshold</code>。</li><li>帶上以設置好的 GAID (<a href="../posts/20419.html#使用-GTM-埋設-GA">不知道看這邊</a>)。</li><li>新增觸發條件<code>Scroll Depth 40</code>與<code>Scroll Depth 85</code></li></ol><p><img src="https://i.imgur.com/phuxJ4n.png" alt=""></p><h2 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h2><hr><p>基本上只要 <a href="#Google-Tag-Manager-設置事件">Google Tag Manager 設置事件</a>發佈後就完成了，不過在正式環境還是 Debug 一下比較安全。</p><h3 id="啟用預覽"><a href="#啟用預覽" class="headerlink" title="啟用預覽"></a>啟用預覽</h3><p>在 Google Tag Manager 右上角有個預覽按鈕，按下後出現橘色的框框即進入預覽模式。<br><img src="https://i.imgur.com/lqwRzoG.png" alt=""></p><h3 id="確認事件觸發"><a href="#確認事件觸發" class="headerlink" title="確認事件觸發"></a>確認事件觸發</h3><p>重新整理網站後底下出現 Debug 小工具，接著測試欲觸發的事件，確認左邊 Trigger 新增時，右邊 Tag 是否有被移動到 <code>Tags Fired On This Event</code>。<br><img src="https://i.imgur.com/3NLa2sE.png" alt=""></p><h3 id="確認變數"><a href="#確認變數" class="headerlink" title="確認變數"></a>確認變數</h3><p>接著點入 Tag，可以確認 Tag 被觸發時所帶的變數是否符合預期。<br><img src="https://i.imgur.com/hi8Pzhp.png" alt=""></p><h2 id="Google-Analytics-設置目標"><a href="#Google-Analytics-設置目標" class="headerlink" title="Google Analytics 設置目標"></a>Google Analytics 設置目標</h2><hr><p>目標用來衡量網站/應用程式<strong>達成指定目標</strong>的效果<a href="https://support.google.com/analytics/answer/1012040" target="_blank" rel="noopener">官方參考</a>，目標追蹤完成文章閱讀 (捲動百分比達 80% 以上)。</p><p>根據 Tag 上所帶的參數設定。<br><img src="https://i.imgur.com/nfUeA82.png" alt=""></p><p>之後就可以追訪客的目標達成率。<br><img src="https://i.imgur.com/pG0ogjW.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本站屬於技術分享的文章，最好的互動就是&lt;strong&gt;閱讀文章的深度&lt;/strong&gt;，透過 GTM 可以簡單的設置當捲動深度達到目標百分比時當作是轉換。本篇可以拆分成三個部分：GTM 事件設定、GTM Debug、GA 目標設定。&lt;/p&gt;
&lt;/b
      
    
    </summary>
    
      <category term="網站分析" scheme="https://samirliu127.github.io/categories/tracking/"/>
    
    
      <category term="Google Tag Manager" scheme="https://samirliu127.github.io/tags/Google-Tag-Manager/"/>
    
      <category term="Google Analytics" scheme="https://samirliu127.github.io/tags/Google-Analytics/"/>
    
  </entry>
  
  <entry>
    <title>Google Analytics 常用術語整理</title>
    <link href="https://samirliu127.github.io/posts/32961.html"/>
    <id>https://samirliu127.github.io/posts/32961.html</id>
    <published>2019-11-15T03:24:21.000Z</published>
    <updated>2019-12-13T02:01:57.540Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>使用 Google Analytics 不得不了解一些名詞，這邊整理了一些常見的名詞，希望對一些初次使用 Google Analytics 的人有些幫助。</p></blockquote><h2 id="工作階段-Session"><a href="#工作階段-Session" class="headerlink" title="工作階段 (Session)"></a>工作階段 (Session)</h2><hr><p>Session 是 Google Analytics 裡<strong>重要且實用</strong>的指標(metrics)，一個 Session 代表一個訪客在網站內所發生的一系列互動，瀏覽、點擊或電子商務等。當遇到以下三種情況時，會進入下一個 Session。</p><ul><li><strong>閒置網站超時</strong><br>預設為 30 分鐘，可以在 GA 後臺修改：設定 &gt; 資源 &gt; 追蹤資訊 &gt; 工作階段設定</li><li><strong>每天半夜 23:59:59</strong><br>過了午夜將用新的 Session 做計算。</li><li><strong>新的「來源/媒介」(source/medium)</strong><br>訪客透過第一種來源/媒介到站，隨後不論是否離開網站，再透過第二種來源/媒介回到網站，將用新的 Session 做計算。</li></ul><h2 id="來源-媒介-廣告活動-source-medium-campaign"><a href="#來源-媒介-廣告活動-source-medium-campaign" class="headerlink" title="來源, 媒介, 廣告活動 (source, medium, campaign)"></a>來源, 媒介, 廣告活動 (source, medium, campaign)</h2><hr><p>來源/媒介常用於追蹤廣告所帶來成效表現的維度(Dimension)。根據UTM參數，Google Analytics能辨別5件事：</p><table><thead><tr><th>UTM</th><th>說明</th><th>範例</th></tr></thead><tbody><tr><td>來源(Source)</td><td>標示為你網站流量的來源，如：網站、社群</td><td>utm_source=facebook</td></tr><tr><td>媒介(Medium)</td><td>標示為你網站流量的媒介，如：cpc、cpm</td><td>utm_medium=cpc</td></tr><tr><td>廣告活動(campaign)</td><td>廣告活動形式、名稱。</td><td>utm_campaign=1111_sale</td></tr><tr><td>關鍵字(term)</td><td>通常是付費關鍵字廣告所使用的字詞。</td><td>utm_term=隨勛所欲</td></tr><tr><td>廣告內容(content)</td><td>辨識同一廣告中不同內容的 A/B 測試。</td><td>utm_content=textlink</td></tr></tbody></table><h3 id="Google-Analytics-管道（可略過）"><a href="#Google-Analytics-管道（可略過）" class="headerlink" title="Google Analytics 管道（可略過）"></a>Google Analytics 管道（可略過）</h3><p>預設的系統管道定義反映出「預設管道分組」中，各管道組成元素目前的 Analytics (分析) 資料檢視。<a href="https://support.google.com/analytics/answer/3297892" target="_blank" rel="noopener">參考連結</a></p><table><thead><tr><th>管道</th><th>來源</th><th>媒介</th><th>說明</th></tr></thead><tbody><tr><td>直接 Direct</td><td>(direct)</td><td>(not set) or (none)</td><td></td></tr><tr><td>參照連結網址 Referral</td><td></td><td>(referral url)</td><td>媒介與參照連結網址達成完全比對。</td></tr><tr><td>隨機搜尋 Organic Search</td><td></td><td>(organic)</td><td>媒介與隨機搜尋達成完全比對。</td></tr><tr><td>付費搜尋 Paid Search</td><td></td><td>^(cpc|ppc|paidsearch)$</td><td></td></tr><tr><td>多媒體 Display</td><td></td><td>^(display|cpm|banner)$</td><td></td></tr><tr><td>其他廣告 Other Advertising</td><td></td><td>^(cpv|cpa|cpp|content-text)$</td><td></td></tr><tr><td>社交 Social</td><td></td><td>^(social|social-network|social-media|sm|social network|social media)$</td><td></td></tr><tr><td>電子郵件 Email</td><td></td><td>^(email)$</td><td></td></tr><tr><td>(Other)</td><td></td><td></td><td>工作階段未與任何管道說明達成比對。</td></tr></tbody></table><h2 id="新使用者-回訪者-使用者-使用者類型"><a href="#新使用者-回訪者-使用者-使用者類型" class="headerlink" title="新使用者, 回訪者, 使用者, 使用者類型"></a>新使用者, 回訪者, 使用者, 使用者類型</h2><hr><h3 id="新使用者-New-Users"><a href="#新使用者-New-Users" class="headerlink" title="新使用者 (New Users)"></a>新使用者 (New Users)</h3><p>指標(metrics)，訪客<strong>首次</strong>進站就會被記錄成新使用者，訪客的識別存於 cookie，所以當訪客切換了瀏覽器或是設備再次進站時，會被記錄另一個新使用者。</p><h3 id="回訪者-Returning-Users"><a href="#回訪者-Returning-Users" class="headerlink" title="回訪者 (Returning Users)"></a>回訪者 (Returning Users)</h3><p>指標(metrics)，非首次進站都是回訪者，當天一個新訪客產生第二次的 Session，這時新用戶記錄 1 筆，回訪者也紀錄 1 筆。</p><h3 id="使用者-Users"><a href="#使用者-Users" class="headerlink" title="使用者 (Users)"></a>使用者 (Users)</h3><p>指標(metrics)，不重複的使用者，不過用戶在不同設備和不同瀏覽器都會當作不同的使用者，並非真實唯一使用者。</p><h3 id="使用者類型-User-Type"><a href="#使用者類型-User-Type" class="headerlink" title="使用者類型 (User Type)"></a>使用者類型 (User Type)</h3><p>維度(Dimension)，可用於切分新使用者(New Visitor)與回訪者(Returning Visitor)。</p><h2 id="跳出率-離開率"><a href="#跳出率-離開率" class="headerlink" title="跳出率, 離開率"></a>跳出率, 離開率</h2><h3 id="跳出率-Bounce-Rate"><a href="#跳出率-Bounce-Rate" class="headerlink" title="跳出率 (Bounce Rate)"></a>跳出率 (Bounce Rate)</h3><p>當訪客進到登陸頁(Landing Page)後，沒有進行下一步的<strong>互動</strong>便直接離站，此登陸頁會紀錄 1 筆跳出(Bounce)，計算基於 Session。</p><blockquote><p><strong>互動：</strong><br>是指有在 Google Analytics 上設置的事件。<br>在一般只有全頁瀏覽追蹤的狀況下，第二頁的瀏覽行為視為所說的<strong>互動</strong>。<br>可以是將註冊、填表單、加入購物車等行為列為<strong>互動</strong>，以純文章網站可以是捲動網頁當作是完成閱讀的<strong>互動</strong>。</p></blockquote><blockquote><p><img src="/img/32961/001.png" alt=""></p></blockquote><h3 id="離開率-Exit-Rate"><a href="#離開率-Exit-Rate" class="headerlink" title="離開率 (Exit Rate)"></a>離開率 (Exit Rate)</h3><p>訪客離開網站的頁面，也可以說是 Session 最後一筆瀏覽頁面的紀錄，該網頁會紀錄 1 筆離開(Exit)，計算基於 Page View。</p><blockquote><p><img src="/img/32961/002.png" alt=""></p></blockquote><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><pre><code>UserA: Page A &gt; Page B &gt; Page CUserB: Page A &gt; Page DUserC: Page CUserD: Page C &gt; Page A &gt; Page B</code></pre><p>跳出率與離開率計算結果如下：</p><h5 id="跳出率："><a href="#跳出率：" class="headerlink" title="跳出率："></a>跳出率：</h5><p>PageA: 0% (2 個 Session 於 PageA 開始，皆為非單頁的 Session)<br>PageB: 0%<br>PageC: 50% (2 個 Session 於 PageC 開始，1 筆為單頁的 Session)<br>PageD: 0%</p><h5 id="離開率："><a href="#離開率：" class="headerlink" title="離開率："></a>離開率：</h5><p>PageA: 0% (3 筆 PV 數，皆為最後一頁)<br>PageB: 50% (2 筆 PV 數，1 筆為最後一頁)<br>PageC: 67% (3 筆 PV 數，2 筆為最後一頁)<br>PageD: 100% (1 筆 PV 數，1 筆為最後一頁)</p><h2 id="停留時間"><a href="#停留時間" class="headerlink" title="停留時間"></a>停留時間</h2><hr><h3 id="網頁停留時間-Time-on-Page"><a href="#網頁停留時間-Time-on-Page" class="headerlink" title="網頁停留時間 (Time on Page)"></a>網頁停留時間 (Time on Page)</h3><p>訪客在特定頁面上花費的時間（以秒為單位），計算方法是從下一個頁面的初始查看時間減去前一頁面的初始查看時間。此指標不適用於該屬性的退出頁面。</p><h3 id="工作階段時間-Time-on-Site"><a href="#工作階段時間-Time-on-Site" class="headerlink" title="工作階段時間 (Time on Site)"></a>工作階段時間 (Time on Site)</h3><p>訪客 Session 的總時長（以秒為單位）。</p><p><img src="/img/32961/003.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;使用 Google Analytics 不得不了解一些名詞，這邊整理了一些常見的名詞，希望對一些初次使用 Google Analytics 的人有些幫助。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;工作階段-Session&quot;&gt;&lt;a hre
      
    
    </summary>
    
      <category term="網站分析" scheme="https://samirliu127.github.io/categories/tracking/"/>
    
    
      <category term="Google Analytics" scheme="https://samirliu127.github.io/tags/Google-Analytics/"/>
    
  </entry>
  
  <entry>
    <title>Google Tag Manager 入門</title>
    <link href="https://samirliu127.github.io/posts/30024.html"/>
    <id>https://samirliu127.github.io/posts/30024.html</id>
    <published>2019-11-12T12:40:56.000Z</published>
    <updated>2019-12-13T02:04:50.013Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前一篇文章(<a href="../posts/20419.html">GA?GTM? 傻傻分不清楚</a>)提到 GA 與 GTM 的差異，不過為什麼要多一層 GTM 呢？這次來講 GTM 的基本介紹與使用方法。</p></blockquote><h2 id="使用-Google-Tag-Manager-的優點"><a href="#使用-Google-Tag-Manager-的優點" class="headerlink" title="使用 Google Tag Manager 的優點"></a>使用 Google Tag Manager 的優點</h2><hr><h3 id="1-介面化操作新增、刪除、修改網站上的代碼。"><a href="#1-介面化操作新增、刪除、修改網站上的代碼。" class="headerlink" title="1. 介面化操作新增、刪除、修改網站上的代碼。"></a>1. 介面化操作新增、刪除、修改網站上的代碼。</h3><p>不懂程式也可以簡單在網頁設置追蹤碼，同時在管理追蹤上也更有效率。</p><h3 id="2-透過-GTM-可以快速測試代碼的可行性。"><a href="#2-透過-GTM-可以快速測試代碼的可行性。" class="headerlink" title="2. 透過 GTM 可以快速測試代碼的可行性。"></a>2. 透過 GTM 可以快速測試代碼的可行性。</h3><p>在預覽模式就可以在本端測試代碼執行狀況，在 Debug 的畫面上可以很快的找到問題。從新增、修正到發佈只需要短短幾分鐘，這將大大節省了時間。</p><h3 id="3-提高網站的速度"><a href="#3-提高網站的速度" class="headerlink" title="3. 提高網站的速度"></a>3. 提高網站的速度</h3><p>透過 GTM 去載入代碼是異步執行，這代表網站不會被載入較慢的代碼給拖累，提升網站的使用者體驗。</p><h2 id="設置-Google-Tag-Manager"><a href="#設置-Google-Tag-Manager" class="headerlink" title="設置 Google Tag Manager"></a>設置 Google Tag Manager</h2><hr><p>部署只需要在 GTM 裡找到兩段程式碼，分別放在 head 與 body 裡就完成了，參考官方 <a href="https://developers.google.com/tag-manager/quickstart" target="_blank" rel="noopener">Quick Start Guide</a>。<br><img src="/img/30024/001.png" alt=""></p><h2 id="Google-Tag-Manager-基本結構"><a href="#Google-Tag-Manager-基本結構" class="headerlink" title="Google Tag Manager 基本結構"></a>Google Tag Manager 基本結構</h2><hr><p><img src="/img/30024/000.png" alt=""></p><h3 id="變數-variable"><a href="#變數-variable" class="headerlink" title="變數 (variable)"></a>變數 (variable)</h3><p>定義具名的預留值，供觸發條件與代碼使用，又細分為內建變數與使用者自定義變數，列出幾個我常使用的變數。</p><ul><li>內建變數 (Built-in Variables)：<br>Click Element<br>Click Classes<br>Click ID</li><li>使用者自訂變數（User-defines Variables）：<br>Google Analytics (分析) 設定</li></ul><h3 id="觸發條件-Trigger"><a href="#觸發條件-Trigger" class="headerlink" title="觸發條件 (Trigger)"></a>觸發條件 (Trigger)</h3><p>設定啟用代碼的規則與邏輯。</p><ul><li>網頁瀏覽<br>觸發順序：網頁瀏覽(PageView) =&gt; Dom 就緒(Dom Ready) =&gt; 視窗載入(Window Load)</li><li>點擊<br>會使用到內建變數點擊(Click) 系列，須自行去變數啟用。</li></ul><h3 id="代碼-Tag"><a href="#代碼-Tag" class="headerlink" title="代碼(Tag)"></a>代碼(Tag)</h3><p>設置想要觸發的程式碼，列出幾個我常使用的預設模板。</p><ul><li>Google Analytics (分析) – 通用 Analytics (分析)</li><li>Google Ads 再行銷</li><li>Google Ads 轉換追蹤</li><li>Bing 廣告通用事件追蹤</li><li>Hotjar Tracking Code</li></ul><p>當沒有預設模板使用<code>自訂 HTML</code>，如：Facebook Pixel</p><h2 id="在-GTM-設置-GA"><a href="#在-GTM-設置-GA" class="headerlink" title="在 GTM 設置 GA"></a>在 GTM 設置 GA</h2><hr><h3 id="設置"><a href="#設置" class="headerlink" title="設置"></a>設置</h3><h4 id="變數"><a href="#變數" class="headerlink" title="變數"></a>變數</h4><p>Google Analytics (分析) 設定，這變數好用在設定代碼時，不用每次都填入 GA Tracking ID 與相關的設定。<br><img src="/img/30024/002.png" alt=""></p><h4 id="觸發條件"><a href="#觸發條件" class="headerlink" title="觸發條件"></a>觸發條件</h4><p>預設就有<code>All Pages</code>，不需要設置。</p><h4 id="代碼"><a href="#代碼" class="headerlink" title="代碼"></a>代碼</h4><p>使用預設模板<code>Google Analytics (分析) – 通用 Analytics (分析)</code>，選擇變數<code>GAID</code>，選擇觸發條件<code>All Pages</code>，設置完後發佈。<br><img src="/img/30024/003.png" alt=""></p><h3 id="檢查工具"><a href="#檢查工具" class="headerlink" title="檢查工具"></a>檢查工具</h3><p>推薦使用 <a href="https://chrome.google.com/webstore/detail/tag-assistant-by-google/kejbdjndbnbjgmefkgdddjlbokphdefk" target="_blank" rel="noopener">Tag Assistant</a>，可以檢查 Google 服務的工具，啟用後重新整理網頁將會看到代碼的狀態。<br><img src="/img/30024/004.png" alt=""></p><h2 id="其他小工具"><a href="#其他小工具" class="headerlink" title="其他小工具"></a>其他小工具</h2><hr><p>介紹幾個廣告應用的小工具</p><ul><li><a href="https://chrome.google.com/webstore/detail/tag-assistant-by-google/kejbdjndbnbjgmefkgdddjlbokphdefk" target="_blank" rel="noopener">Tag Assistant</a></li><li><a href="https://chrome.google.com/webstore/detail/facebook-pixel-helper/fdgfkebogiimcoedlicjlajpkdmockpc" target="_blank" rel="noopener">Facebook Pixel Helper</a></li><li><a href="https://chrome.google.com/webstore/detail/oath-ad-platforms-dot-hel/eppmoegdkngaleolkhdcdjoepijloikj" target="_blank" rel="noopener">Oath: Ad Platforms Dot Helper</a></li><li><a href="https://chrome.google.com/webstore/detail/uet-tag-helper-by-bing-ad/naijndjklgmffmpembnkfbcjbognokbf" target="_blank" rel="noopener">UET Tag Helper (by Bing Ads)</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;前一篇文章(&lt;a href=&quot;../posts/20419.html&quot;&gt;GA?GTM? 傻傻分不清楚&lt;/a&gt;)提到 GA 與 GTM 的差異，不過為什麼要多一層 GTM 呢？這次來講 GTM 的基本介紹與使用方法。&lt;/p&gt;
&lt;/blockquote
      
    
    </summary>
    
      <category term="網站分析" scheme="https://samirliu127.github.io/categories/tracking/"/>
    
    
      <category term="Google Tag Manager" scheme="https://samirliu127.github.io/tags/Google-Tag-Manager/"/>
    
      <category term="Google Analytics" scheme="https://samirliu127.github.io/tags/Google-Analytics/"/>
    
  </entry>
  
  <entry>
    <title>GA?GTM? 傻傻分不清楚</title>
    <link href="https://samirliu127.github.io/posts/20419.html"/>
    <id>https://samirliu127.github.io/posts/20419.html</id>
    <published>2019-11-10T13:23:11.000Z</published>
    <updated>2019-11-22T08:12:54.485Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GA-跟-GTM-有什麼區別"><a href="#GA-跟-GTM-有什麼區別" class="headerlink" title="GA 跟 GTM 有什麼區別?"></a>GA 跟 GTM 有什麼區別?</h2><p>許多剛接觸 GA 跟 GTM 的人，常常搞不清楚它們的差別，在這邊盡量的簡單說明一下。<br><img src="https://pic.pimg.tw/serena0513/1512702551-2896529632.jpg" alt=""></p><h3 id="Google-Analytics-GA"><a href="#Google-Analytics-GA" class="headerlink" title="Google Analytics (GA)"></a>Google Analytics (GA)</h3><p>Google Analytics 主要是追蹤你的網站，產生報告跟統計資訊。<a href="https://marketingplatform.google.com/about/analytics/" target="_blank" rel="noopener">了解更多</a></p><ul><li>多少人訪問了你的網站</li><li>網站裡那些頁面是最受歡迎的</li><li>使用者是透過甚麼管道進到你的網站</li><li>使用者的輪廓統計(年齡層、性別、興趣、地區分佈)</li><li>使用者在網站瀏覽的行為流程</li></ul><h3 id="Google-Tag-Manager-GTM"><a href="#Google-Tag-Manager-GTM" class="headerlink" title="Google Tag Manager (GTM)"></a>Google Tag Manager (GTM)</h3><p>顧名思義<strong>代碼管理(Tag Manager)</strong>，Google Tag Manager 能讓用戶定義觸發某些代碼的規則，從而更輕鬆地管理這些混亂的代碼。</p><blockquote><p>Google Tag Manager 並<strong>不會取代</strong> Google Analytics，反而幫助用戶輕鬆將 Google Analytics 部屬到網站上。</p></blockquote><p> Google Tag Manager 不只適用於 Google Analytics，其他包括：</p><ul><li>Google Ads</li><li>Facebook Pixel</li><li>Bing Ads</li><li>Hotjar Tracking</li><li>其他自訂義 HTML/JavaScript 代碼</li></ul><p>GA GTM 的關係：<br><img src="https://i.imgur.com/uXNMR3M.png" alt=""></p><h3 id="使用-GTM-埋設-GA"><a href="#使用-GTM-埋設-GA" class="headerlink" title="使用 GTM 埋設 GA"></a>使用 GTM 埋設 GA</h3><p>這裡簡單的示範在 GTM 埋設 GA 追蹤代碼。</p><ol><li>在網站上設置 GTM，參考官方 <a href="https://developers.google.com/tag-manager/quickstart" target="_blank" rel="noopener">Quick Start Guide</a>。</li><li>找到 GA 追蹤編號。GA 後臺 (管理 &gt; 資源 &gt; 追蹤資訊 &gt; 追蹤程式碼) 即可找到如 <code>UA-XXXXXXX-XX</code> 的編號。</li><li>在 GTM 的代碼新增 <code>通用 Analytics (分析)</code> 的模塊，啟用覆寫後填入 GA 編號。</li><li>觸發條件選擇網頁瀏覽的 <code>All Pages</code>。</li><li>最後儲存後發佈。<br><img src="https://i.imgur.com/7IZ7XzF.png" alt=""></li></ol><p>以上就完成了基本設置。GA 將會追蹤所有已安裝 GTM 所有頁面的瀏覽量。</p><hr><blockquote><p>最後分享個 Chrome 的檢查小工具 Tag Assistant，啟用後在網站上就可以檢查各種 Google 相關產品的標籤狀態。<a href="https://chrome.google.com/webstore/detail/tag-assistant-by-google/kejbdjndbnbjgmefkgdddjlbokphdefk" target="_blank" rel="noopener"><strong>連結點我</strong></a><br><img src="https://i.imgur.com/HXyGXWl.png" alt=""></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;GA-跟-GTM-有什麼區別&quot;&gt;&lt;a href=&quot;#GA-跟-GTM-有什麼區別&quot; class=&quot;headerlink&quot; title=&quot;GA 跟 GTM 有什麼區別?&quot;&gt;&lt;/a&gt;GA 跟 GTM 有什麼區別?&lt;/h2&gt;&lt;p&gt;許多剛接觸 GA 跟 GTM 的人，常常
      
    
    </summary>
    
      <category term="網站分析" scheme="https://samirliu127.github.io/categories/tracking/"/>
    
    
      <category term="Google Tag Manager" scheme="https://samirliu127.github.io/tags/Google-Tag-Manager/"/>
    
      <category term="Google Analytics" scheme="https://samirliu127.github.io/tags/Google-Analytics/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 簡易手冊</title>
    <link href="https://samirliu127.github.io/posts/6756.html"/>
    <id>https://samirliu127.github.io/posts/6756.html</id>
    <published>2019-11-09T10:07:00.000Z</published>
    <updated>2019-11-15T03:25:40.353Z</updated>
    
    <content type="html"><![CDATA[<h2 id="標題"><a href="#標題" class="headerlink" title="標題"></a>標題</h2><p>當您想要將一段文字標示為標題的時候，請使用這個語法。<br>請在行首輸入 <code>#</code> 符號，並在後面加上一個空白後，再輸入標題文字。<br>標題有分成 6 個層級，<code>#</code> 的數量愈多，層級越低。</p><p>您可以按照範例輸入看看：</p><pre><code># 第一層級標題## 第一層級標題### 第一層級標題#### 第一層級標題##### 第一層級標題###### 第一層級標題</code></pre><p>以上範例結果為：</p><h1 id="第一層級標題"><a href="#第一層級標題" class="headerlink" title="第一層級標題"></a>第一層級標題</h1><h2 id="第一層級標題-1"><a href="#第一層級標題-1" class="headerlink" title="第一層級標題"></a>第一層級標題</h2><h3 id="第一層級標題-2"><a href="#第一層級標題-2" class="headerlink" title="第一層級標題"></a>第一層級標題</h3><h4 id="第一層級標題-3"><a href="#第一層級標題-3" class="headerlink" title="第一層級標題"></a>第一層級標題</h4><h5 id="第一層級標題-4"><a href="#第一層級標題-4" class="headerlink" title="第一層級標題"></a>第一層級標題</h5><h6 id="第一層級標題-5"><a href="#第一層級標題-5" class="headerlink" title="第一層級標題"></a>第一層級標題</h6><p>:::info<br>:bulb: 小提示：覺得語法容易忘記嗎？沒關係！<br>HackMD 提供貼心的自動完成功能，例如：您在行首輸入 <code>#</code>，就會出現自動完成選單，提示您可用的標題語法！</p><img width=500 src=https://i.imgur.com/fyFgCez.png?)>:::<h2 id="清單"><a href="#清單" class="headerlink" title="清單"></a>清單</h2><p>當您想要列舉一些項目的時候，請使用此語法，並且可以加上項目編號，將項目縮排即可作為子清單。<br>清單分為<strong>有序清單</strong>與<strong>無序清單</strong>兩種。有序清單是項目符號會使用數字編號；無序清單是項目符號會使用同樣的層級的符號。</p><p>您可以按照範例輸入看看：</p><pre><code>- 無序清單- 無序清單    - 無序清單子清單        - 無序清單子子清單1. 有序清單2. 有序清單    1. 有序清單子清單        1. 有序清單子子清單</code></pre><p>以上範例結果為：</p><ul><li>無序清單</li><li>無序清單<ul><li>無序清單子清單<ul><li>無序清單子子清單</li></ul></li></ul></li></ul><ol><li>有序清單</li><li>有序清單<ol><li>有序清單子清單<ol><li>有序清單子子清單</li></ol></li></ol></li></ol><h2 id="引用區塊"><a href="#引用區塊" class="headerlink" title="引用區塊"></a>引用區塊</h2><p>當您需要將一段文字標示為引用的時候，請使用此語法。<br>請在行首輸入 <code>&gt;</code> 符號，並在後面加上一個空白後，再輸入引用文字，即可形成引用區塊。如在引用區塊前多次輸入 <code>&gt;</code> 符號，即是子引用區塊。</p><p>您可以按照範例輸入看看：</p><pre><code>&gt; 引用區塊&gt;&gt; 子引用區塊&gt;&gt;&gt; 子子引用區塊</code></pre><p>以上範例結果為：</p><blockquote><p>引用區塊</p><blockquote><p>子引用區塊</p><blockquote><p>子子引用區塊</p></blockquote></blockquote></blockquote><h2 id="粗體、斜體"><a href="#粗體、斜體" class="headerlink" title="粗體、斜體"></a>粗體、斜體</h2><p>當您需要將一段文字以粗體或是斜體表現的時候，請用此語法。<br>請在文字兩端加上 <code>*</code> 符號，即可將文字變成粗體或是斜體<br>使用一個 <code>*</code> 為斜體；使用兩個 <code>*</code> 為粗體。</p><p>您可以按照範例輸入看看：</p><pre><code>*斜體***粗體**</code></pre><p>以上範例結果為：</p><p><em>斜體</em><br><strong>粗體</strong></p><p>:::info<br>:bulb: 小提示：使用編輯區塊上方的工具列，快速對選取中的文字加上格式</p><p><img src="https://i.imgur.com/Cnle9f9.png" alt=""><br>:::</p><h2 id="圖片"><a href="#圖片" class="headerlink" title="圖片"></a>圖片</h2><p>當您需要在筆記中加入圖片的時候，請使用此語法。<br>請先輸入 <code>![]()</code> 這些文字，然後在後面的 <code>()</code> 中間插入圖片的網址，即可加入圖片。<br>您也可以將圖片直接拖曳到編輯器、複製圖片後直接在編輯器貼上，都會直接將圖片上傳到 <a href="https://imgur.com/" target="_blank" rel="noopener">imgur</a> 後自動插入圖片語法。</p><p>您可以按照範例輸入看看：</p><pre><code>![](https://hackmd.io/favicon.png)</code></pre><p>以上範例結果為：</p><p><img src="https://hackmd.io/favicon.png" alt=""></p><p>:::info<br>:bulb: 小提示：在空白之後輸入 <code>!</code> 會有自動完成，提示您可用的圖片語法</p><img width=500 src="https://i.imgur.com/sZJf6AJ.png" >:::<h2 id="影片"><a href="#影片" class="headerlink" title="影片"></a>影片</h2><p>當您需要加入影片的時候，請使用此語法。<br>請先輸入 <code>{}</code> 這些文字，這時候會有自動完成：</p><img width=500 src="https://i.imgur.com/e2dWOvX.png" ><p>接下來請按下列步驟：</p><ol><li>在自動完成中選擇您的影片來源，可能是 youtube 或是 vimeo</li><li>假設您選擇 youtube，您的文字會變成 <pre><code>{%youtube youtubeid %}</code></pre></li><li>假設您的影片連結是：<code>https://www.youtube.com/watch?v=PJuNmlE74BQ</code></li><li>請您將文字中的 <code>youtubeid</code> 替換成您影片連結的 id，也就是 <code>PJuNmlE74BQ</code></li><li>您的文字最後會是：<code><div class="video-container"><iframe src="//www.youtube.com/embed/PJuNmlE74BQ" frameborder="0" allowfullscreen></iframe></div></code></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;標題&quot;&gt;&lt;a href=&quot;#標題&quot; class=&quot;headerlink&quot; title=&quot;標題&quot;&gt;&lt;/a&gt;標題&lt;/h2&gt;&lt;p&gt;當您想要將一段文字標示為標題的時候，請使用這個語法。&lt;br&gt;請在行首輸入 &lt;code&gt;#&lt;/code&gt; 符號，並在後面加上一個空白後，再輸入
      
    
    </summary>
    
      <category term="隨筆" scheme="https://samirliu127.github.io/categories/others/"/>
    
    
      <category term="markdown" scheme="https://samirliu127.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 常用指令</title>
    <link href="https://samirliu127.github.io/posts/23955.html"/>
    <id>https://samirliu127.github.io/posts/23955.html</id>
    <published>2019-11-08T05:45:53.000Z</published>
    <updated>2019-12-09T09:02:19.307Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h2><p>命令行中輸入：</p><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"new article"</span>  <span class="token comment" spellcheck="true"># 建立文章</span>$ hexo new draft <span class="token string">"draft article"</span>  <span class="token comment" spellcheck="true"># 建立草稿</span>$ hexo publish <span class="token string">"draft article"</span>  <span class="token comment" spellcheck="true"># 發布文章</span></code></pre><p>之後在 <code>source/_posts</code> 目錄下面，多了一個 <code>new-article.md</code> 的文件。</p><p>打開之後我們會看到：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token hr punctuation">---</span>title: new articledate: 2019-11-01 20:10:33<span class="token title important">tags:<span class="token punctuation">---</span></span></code></pre><p>文件的開頭是屬性，採用統一的yaml格式，用三條短橫線分隔。下面是文章正文。</p><p>文章的正文支持markdown格式，建議你先學習一下它的語法。markdown不像html似的一大堆標籤，很簡單，只有幾個符號。</p><p>新建、刪除或修改文章後，不需要重啟hexo server，刷新一下即可預覽。</p><h2 id="屬性"><a href="#屬性" class="headerlink" title="屬性"></a>屬性</h2><p>文章可以擁有如下屬性：</p><table><thead><tr><th>Setting</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td>layout</td><td>layout</td><td>post或page</td></tr><tr><td>title</td><td>文章的標題</td><td></td></tr><tr><td>date</td><td>創建日期</td><td>文件的創建日期</td></tr><tr><td>updated</td><td>修改日期</td><td>文件的修改日期</td></tr><tr><td>comments</td><td>是否開啟評論</td><td>true</td></tr><tr><td>tags</td><td>標籤</td><td></td></tr><tr><td>categories</td><td>分類</td><td></td></tr><tr><td>permalink</td><td>url中的名字</td><td>文件名</td></tr></tbody></table><h2 id="部屬"><a href="#部屬" class="headerlink" title="部屬"></a>部屬</h2><p>本端測試</p><pre class=" language-bash"><code class="language-bash">$ hexo s --draft</code></pre><p>清空暫存</p><pre class=" language-bash"><code class="language-bash">$ hexo clean</code></pre><p>打包並部屬</p><pre class=" language-bash"><code class="language-bash">$ hexo d -g</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;文章&quot;&gt;&lt;a href=&quot;#文章&quot; class=&quot;headerlink&quot; title=&quot;文章&quot;&gt;&lt;/a&gt;文章&lt;/h2&gt;&lt;p&gt;命令行中輸入：&lt;/p&gt;
&lt;pre class=&quot; language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ 
      
    
    </summary>
    
      <category term="隨筆" scheme="https://samirliu127.github.io/categories/others/"/>
    
    
      <category term="hexo" scheme="https://samirliu127.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
